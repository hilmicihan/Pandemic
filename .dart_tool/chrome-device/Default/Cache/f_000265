define(['dart_sdk', 'packages/video_player/src/sub_rip.dart', 'packages/video_player_platform_interface/method_channel_video_player.dart', 'packages/flutter/src/services/system_channels.dart', 'packages/flutter/src/foundation/change_notifier.dart', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter/src/rendering/layer.dart', 'packages/flutter/src/rendering/proxy_box.dart', 'packages/flutter/src/gestures/drag_details.dart', 'packages/flutter/src/gestures/tap.dart', 'packages/flutter/src/painting/edge_insets.dart', 'packages/flutter/src/rendering/stack.dart', 'packages/flutter/src/material/progress_indicator.dart', 'packages/flutter/src/animation/listener_helpers.dart', 'packages/flutter/src/material/colors.dart', 'packages/flutter/src/painting/alignment.dart', 'packages/flutter/src/painting/box_decoration.dart', 'packages/flutter/src/painting/border_radius.dart', 'packages/flutter/src/painting/strut_style.dart'], (function load__packages__video_player__video_player_dart(dart_sdk, packages__video_player__src__sub_rip$46dart, packages__video_player_platform_interface__method_channel_video_player$46dart, packages__flutter__src__services__system_channels$46dart, packages__flutter__src__foundation__change_notifier$46dart, packages__flutter__src__widgets__widget_span$46dart, packages__flutter__src__rendering__layer$46dart, packages__flutter__src__rendering__proxy_box$46dart, packages__flutter__src__gestures__drag_details$46dart, packages__flutter__src__gestures__tap$46dart, packages__flutter__src__painting__edge_insets$46dart, packages__flutter__src__rendering__stack$46dart, packages__flutter__src__material__progress_indicator$46dart, packages__flutter__src__animation__listener_helpers$46dart, packages__flutter__src__material__colors$46dart, packages__flutter__src__painting__alignment$46dart, packages__flutter__src__painting__box_decoration$46dart, packages__flutter__src__painting__border_radius$46dart, packages__flutter__src__painting__strut_style$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const closed_caption_file = packages__video_player__src__sub_rip$46dart.src__closed_caption_file;
  const video_player_platform_interface = packages__video_player_platform_interface__method_channel_video_player$46dart.video_player_platform_interface;
  const message_codec = packages__flutter__src__services__system_channels$46dart.src__services__message_codec;
  const change_notifier = packages__flutter__src__foundation__change_notifier$46dart.src__foundation__change_notifier;
  const binding = packages__flutter__src__widgets__widget_span$46dart.src__widgets__binding;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const container = packages__flutter__src__widgets__widget_span$46dart.src__widgets__container;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const gesture_detector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__gesture_detector;
  const basic = packages__flutter__src__widgets__widget_span$46dart.src__widgets__basic;
  const text = packages__flutter__src__widgets__widget_span$46dart.src__widgets__text;
  const box = packages__flutter__src__rendering__layer$46dart.src__rendering__box;
  const proxy_box = packages__flutter__src__rendering__proxy_box$46dart.src__rendering__proxy_box;
  const drag_details = packages__flutter__src__gestures__drag_details$46dart.src__gestures__drag_details;
  const tap = packages__flutter__src__gestures__tap$46dart.src__gestures__tap;
  const edge_insets = packages__flutter__src__painting__edge_insets$46dart.src__painting__edge_insets;
  const stack = packages__flutter__src__rendering__stack$46dart.src__rendering__stack;
  const progress_indicator = packages__flutter__src__material__progress_indicator$46dart.src__material__progress_indicator;
  const animations = packages__flutter__src__animation__listener_helpers$46dart.src__animation__animations;
  const colors = packages__flutter__src__material__colors$46dart.src__material__colors;
  const alignment = packages__flutter__src__painting__alignment$46dart.src__painting__alignment;
  const box_decoration = packages__flutter__src__painting__box_decoration$46dart.src__painting__box_decoration;
  const border_radius = packages__flutter__src__painting__border_radius$46dart.src__painting__border_radius;
  const text_style = packages__flutter__src__painting__strut_style$46dart.src__painting__text_style;
  var video_player = Object.create(dart.library);
  var $join = dartx.join;
  var $toString = dartx.toString;
  var $clamp = dartx.clamp;
  dart._checkModuleNullSafetyMode(false);
  var T = Object.create({
    DurationRangeL: () => (T.DurationRangeL = dart.constFn(dart.legacy(video_player_platform_interface.DurationRange)))(),
    CompleterOfvoid: () => (T.CompleterOfvoid = dart.constFn(async.Completer$(dart.void)))(),
    VideoEventL: () => (T.VideoEventL = dart.constFn(dart.legacy(video_player_platform_interface.VideoEvent)))(),
    VideoEventLTovoid: () => (T.VideoEventLTovoid = dart.constFn(dart.fnType(dart.void, [T.VideoEventL()])))(),
    PlatformExceptionL: () => (T.PlatformExceptionL = dart.constFn(dart.legacy(message_codec.PlatformException)))(),
    ObjectL: () => (T.ObjectL = dart.constFn(dart.legacy(core.Object)))(),
    ObjectLTovoid: () => (T.ObjectLTovoid = dart.constFn(dart.fnType(dart.void, [T.ObjectL()])))(),
    FutureOfNull: () => (T.FutureOfNull = dart.constFn(async.Future$(core.Null)))(),
    FutureLOfNull: () => (T.FutureLOfNull = dart.constFn(dart.legacy(T.FutureOfNull())))(),
    TimerL: () => (T.TimerL = dart.constFn(dart.legacy(async.Timer)))(),
    TimerLToFutureLOfNull: () => (T.TimerLToFutureLOfNull = dart.constFn(dart.fnType(T.FutureLOfNull(), [T.TimerL()])))(),
    DurationL: () => (T.DurationL = dart.constFn(dart.legacy(core.Duration)))(),
    VoidToNull: () => (T.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    VideoPlayerL: () => (T.VideoPlayerL = dart.constFn(dart.legacy(video_player.VideoPlayer)))(),
    _LocationL: () => (T._LocationL = dart.constFn(dart.legacy(widget_inspector._Location)))(),
    RenderBoxL: () => (T.RenderBoxL = dart.constFn(dart.legacy(box.RenderBox)))(),
    OffsetL: () => (T.OffsetL = dart.constFn(dart.legacy(ui.Offset)))(),
    OffsetLTovoid: () => (T.OffsetLTovoid = dart.constFn(dart.fnType(dart.void, [T.OffsetL()])))(),
    DragStartDetailsL: () => (T.DragStartDetailsL = dart.constFn(dart.legacy(drag_details.DragStartDetails)))(),
    DragStartDetailsLToNull: () => (T.DragStartDetailsLToNull = dart.constFn(dart.fnType(core.Null, [T.DragStartDetailsL()])))(),
    DragUpdateDetailsL: () => (T.DragUpdateDetailsL = dart.constFn(dart.legacy(drag_details.DragUpdateDetails)))(),
    DragUpdateDetailsLToNull: () => (T.DragUpdateDetailsLToNull = dart.constFn(dart.fnType(core.Null, [T.DragUpdateDetailsL()])))(),
    DragEndDetailsL: () => (T.DragEndDetailsL = dart.constFn(dart.legacy(drag_details.DragEndDetails)))(),
    DragEndDetailsLToNull: () => (T.DragEndDetailsLToNull = dart.constFn(dart.fnType(core.Null, [T.DragEndDetailsL()])))(),
    TapDownDetailsL: () => (T.TapDownDetailsL = dart.constFn(dart.legacy(tap.TapDownDetails)))(),
    TapDownDetailsLToNull: () => (T.TapDownDetailsLToNull = dart.constFn(dart.fnType(core.Null, [T.TapDownDetailsL()])))(),
    ColorL: () => (T.ColorL = dart.constFn(dart.legacy(ui.Color)))(),
    AlwaysStoppedAnimationOfColorL: () => (T.AlwaysStoppedAnimationOfColorL = dart.constFn(animations.AlwaysStoppedAnimation$(T.ColorL())))(),
    WidgetL: () => (T.WidgetL = dart.constFn(dart.legacy(framework.Widget)))(),
    JSArrayOfWidgetL: () => (T.JSArrayOfWidgetL = dart.constFn(_interceptors.JSArray$(T.WidgetL())))()
  });
  const CT = Object.create(null);
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 0
      });
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: closed_caption_file.Caption.prototype,
        [Caption_text]: null,
        [Caption_end]: null,
        [Caption_start]: null,
        [Caption_number]: null
      });
    },
    get C2() {
      return C[2] = dart.constList([], T.DurationRangeL());
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: video_player_platform_interface.DataSourceType.prototype,
        [_name]: "DataSourceType.asset",
        index: 0
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: video_player_platform_interface.DataSourceType.prototype,
        [_name]: "DataSourceType.network",
        index: 1
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: video_player_platform_interface.DataSourceType.prototype,
        [_name]: "DataSourceType.file",
        index: 2
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: video_player_platform_interface.VideoEventType.prototype,
        [_name]: "VideoEventType.initialized",
        index: 0
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: video_player_platform_interface.VideoEventType.prototype,
        [_name]: "VideoEventType.completed",
        index: 1
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: video_player_platform_interface.VideoEventType.prototype,
        [_name]: "VideoEventType.bufferingUpdate",
        index: 2
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: video_player_platform_interface.VideoEventType.prototype,
        [_name]: "VideoEventType.bufferingStart",
        index: 3
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: video_player_platform_interface.VideoEventType.prototype,
        [_name]: "VideoEventType.bufferingEnd",
        index: 4
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: video_player_platform_interface.VideoEventType.prototype,
        [_name]: "VideoEventType.unknown",
        index: 5
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 500000
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: ui.AppLifecycleState.prototype,
        [_name$]: "AppLifecycleState.paused",
        index: 2
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: ui.AppLifecycleState.prototype,
        [_name$]: "AppLifecycleState.resumed",
        index: 0
      });
    },
    get C16() {
      return C[16] = dart.constList([], T._LocationL());
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[16] || CT.C16,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 626,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/video_player-1.0.1/lib/video_player.dart"
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 3003056128.0
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 858927816
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 2143865032
      });
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 7,
        [_Location_line]: 700,
        [_Location_file]: null
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 701,
        [_Location_file]: null
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHorizontalDragStart",
        [_Location_column]: 7,
        [_Location_line]: 702,
        [_Location_file]: null
      });
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHorizontalDragUpdate",
        [_Location_column]: 7,
        [_Location_line]: 711,
        [_Location_file]: null
      });
    },
    get C26() {
      return C[26] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHorizontalDragEnd",
        [_Location_column]: 7,
        [_Location_line]: 717,
        [_Location_file]: null
      });
    },
    get C27() {
      return C[27] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTapDown",
        [_Location_column]: 7,
        [_Location_line]: 722,
        [_Location_file]: null
      });
    },
    get C21() {
      return C[21] = dart.constList([C[22] || CT.C22, C[23] || CT.C23, C[24] || CT.C24, C[25] || CT.C25, C[26] || CT.C26, C[27] || CT.C27], T._LocationL());
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[21] || CT.C21,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 699,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/video_player-1.0.1/lib/video_player.dart"
      });
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 5,
        [EdgeInsets_left]: 0
      });
    },
    get C31() {
      return C[31] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "value",
        [_Location_column]: 13,
        [_Location_line]: 825,
        [_Location_file]: null
      });
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "valueColor",
        [_Location_column]: 13,
        [_Location_line]: 826,
        [_Location_file]: null
      });
    },
    get C33() {
      return C[33] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 13,
        [_Location_line]: 827,
        [_Location_file]: null
      });
    },
    get C30() {
      return C[30] = dart.constList([C[31] || CT.C31, C[32] || CT.C32, C[33] || CT.C33], T._LocationL());
    },
    get C29() {
      return C[29] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[30] || CT.C30,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 824,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/video_player-1.0.1/lib/video_player.dart"
      });
    },
    get C36() {
      return C[36] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "value",
        [_Location_column]: 13,
        [_Location_line]: 830,
        [_Location_file]: null
      });
    },
    get C37() {
      return C[37] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "valueColor",
        [_Location_column]: 13,
        [_Location_line]: 831,
        [_Location_file]: null
      });
    },
    get C38() {
      return C[38] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 13,
        [_Location_line]: 832,
        [_Location_file]: null
      });
    },
    get C35() {
      return C[35] = dart.constList([C[36] || CT.C36, C[37] || CT.C37, C[38] || CT.C38], T._LocationL());
    },
    get C34() {
      return C[34] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[35] || CT.C35,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 829,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/video_player-1.0.1/lib/video_player.dart"
      });
    },
    get C41() {
      return C[41] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "fit",
        [_Location_column]: 9,
        [_Location_line]: 822,
        [_Location_file]: null
      });
    },
    get C42() {
      return C[42] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 9,
        [_Location_line]: 823,
        [_Location_file]: null
      });
    },
    get C40() {
      return C[40] = dart.constList([C[41] || CT.C41, C[42] || CT.C42], T._LocationL());
    },
    get C39() {
      return C[39] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[40] || CT.C40,
        [_Location_name]: null,
        [_Location_column]: 27,
        [_Location_line]: 821,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/video_player-1.0.1/lib/video_player.dart"
      });
    },
    get C45() {
      return C[45] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "value",
        [_Location_column]: 9,
        [_Location_line]: 838,
        [_Location_file]: null
      });
    },
    get C46() {
      return C[46] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "valueColor",
        [_Location_column]: 9,
        [_Location_line]: 839,
        [_Location_file]: null
      });
    },
    get C47() {
      return C[47] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 9,
        [_Location_line]: 840,
        [_Location_file]: null
      });
    },
    get C44() {
      return C[44] = dart.constList([C[45] || CT.C45, C[46] || CT.C46, C[47] || CT.C47], T._LocationL());
    },
    get C43() {
      return C[43] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[44] || CT.C44,
        [_Location_name]: null,
        [_Location_column]: 27,
        [_Location_line]: 837,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/video_player-1.0.1/lib/video_player.dart"
      });
    },
    get C50() {
      return C[50] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 7,
        [_Location_line]: 844,
        [_Location_file]: null
      });
    },
    get C51() {
      return C[51] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 845,
        [_Location_file]: null
      });
    },
    get C49() {
      return C[49] = dart.constList([C[50] || CT.C50, C[51] || CT.C51], T._LocationL());
    },
    get C48() {
      return C[48] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[49] || CT.C49,
        [_Location_name]: null,
        [_Location_column]: 44,
        [_Location_line]: 843,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/video_player-1.0.1/lib/video_player.dart"
      });
    },
    get C54() {
      return C[54] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 849,
        [_Location_file]: null
      });
    },
    get C55() {
      return C[55] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "controller",
        [_Location_column]: 9,
        [_Location_line]: 850,
        [_Location_file]: null
      });
    },
    get C53() {
      return C[53] = dart.constList([C[54] || CT.C54, C[55] || CT.C55], T._LocationL());
    },
    get C52() {
      return C[52] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[53] || CT.C53,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 848,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/video_player-1.0.1/lib/video_player.dart"
      });
    },
    get C56() {
      return C[56] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[16] || CT.C16,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 902,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/video_player-1.0.1/lib/video_player.dart"
      });
    },
    get C59() {
      return C[59] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 25,
        [_Location_line]: 916,
        [_Location_file]: null
      });
    },
    get C60() {
      return C[60] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 31,
        [_Location_line]: 916,
        [_Location_file]: null
      });
    },
    get C58() {
      return C[58] = dart.constList([C[59] || CT.C59, C[60] || CT.C60], T._LocationL());
    },
    get C57() {
      return C[57] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[58] || CT.C58,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 916,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/video_player-1.0.1/lib/video_player.dart"
      });
    },
    get C63() {
      return C[63] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 13,
        [_Location_line]: 915,
        [_Location_file]: null
      });
    },
    get C64() {
      return C[64] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 916,
        [_Location_file]: null
      });
    },
    get C62() {
      return C[62] = dart.constList([C[63] || CT.C63, C[64] || CT.C64], T._LocationL());
    },
    get C61() {
      return C[61] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[62] || CT.C62,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 914,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/video_player-1.0.1/lib/video_player.dart"
      });
    },
    get C67() {
      return C[67] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 11,
        [_Location_line]: 910,
        [_Location_file]: null
      });
    },
    get C68() {
      return C[68] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 914,
        [_Location_file]: null
      });
    },
    get C66() {
      return C[66] = dart.constList([C[67] || CT.C67, C[68] || CT.C68], T._LocationL());
    },
    get C65() {
      return C[65] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[66] || CT.C66,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 909,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/video_player-1.0.1/lib/video_player.dart"
      });
    },
    get C71() {
      return C[71] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 9,
        [_Location_line]: 908,
        [_Location_file]: null
      });
    },
    get C72() {
      return C[72] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 909,
        [_Location_file]: null
      });
    },
    get C70() {
      return C[70] = dart.constList([C[71] || CT.C71, C[72] || CT.C72], T._LocationL());
    },
    get C69() {
      return C[69] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[70] || CT.C70,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 907,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/video_player-1.0.1/lib/video_player.dart"
      });
    },
    get C75() {
      return C[75] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 7,
        [_Location_line]: 906,
        [_Location_file]: null
      });
    },
    get C76() {
      return C[76] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 907,
        [_Location_file]: null
      });
    },
    get C74() {
      return C[74] = dart.constList([C[75] || CT.C75, C[76] || CT.C76], T._LocationL());
    },
    get C73() {
      return C[73] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[74] || CT.C74,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 905,
        [_Location_file]: "file:///C:/src/flutter/flutter/.pub-cache/hosted/pub.dartlang.org/video_player-1.0.1/lib/video_player.dart"
      });
    }
  }, false);
  var C = Array(77).fill(void 0);
  var I = ["package:video_player/video_player.dart"];
  var duration$ = dart.privateName(video_player, "VideoPlayerValue.duration");
  var position$ = dart.privateName(video_player, "VideoPlayerValue.position");
  var caption$ = dart.privateName(video_player, "VideoPlayerValue.caption");
  var buffered$ = dart.privateName(video_player, "VideoPlayerValue.buffered");
  var isPlaying$ = dart.privateName(video_player, "VideoPlayerValue.isPlaying");
  var isLooping$ = dart.privateName(video_player, "VideoPlayerValue.isLooping");
  var isBuffering$ = dart.privateName(video_player, "VideoPlayerValue.isBuffering");
  var volume$ = dart.privateName(video_player, "VideoPlayerValue.volume");
  var playbackSpeed$ = dart.privateName(video_player, "VideoPlayerValue.playbackSpeed");
  var errorDescription$ = dart.privateName(video_player, "VideoPlayerValue.errorDescription");
  var size$ = dart.privateName(video_player, "VideoPlayerValue.size");
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var Caption_text = dart.privateName(closed_caption_file, "Caption.text");
  var Caption_end = dart.privateName(closed_caption_file, "Caption.end");
  var Caption_start = dart.privateName(closed_caption_file, "Caption.start");
  var Caption_number = dart.privateName(closed_caption_file, "Caption.number");
  video_player.VideoPlayerValue = class VideoPlayerValue extends core.Object {
    get duration() {
      return this[duration$];
    }
    set duration(value) {
      super.duration = value;
    }
    get position() {
      return this[position$];
    }
    set position(value) {
      super.position = value;
    }
    get caption() {
      return this[caption$];
    }
    set caption(value) {
      super.caption = value;
    }
    get buffered() {
      return this[buffered$];
    }
    set buffered(value) {
      super.buffered = value;
    }
    get isPlaying() {
      return this[isPlaying$];
    }
    set isPlaying(value) {
      super.isPlaying = value;
    }
    get isLooping() {
      return this[isLooping$];
    }
    set isLooping(value) {
      super.isLooping = value;
    }
    get isBuffering() {
      return this[isBuffering$];
    }
    set isBuffering(value) {
      super.isBuffering = value;
    }
    get volume() {
      return this[volume$];
    }
    set volume(value) {
      super.volume = value;
    }
    get playbackSpeed() {
      return this[playbackSpeed$];
    }
    set playbackSpeed(value) {
      super.playbackSpeed = value;
    }
    get errorDescription() {
      return this[errorDescription$];
    }
    set errorDescription(value) {
      super.errorDescription = value;
    }
    get size() {
      return this[size$];
    }
    set size(value) {
      super.size = value;
    }
    get initialized() {
      return this.duration != null;
    }
    get hasError() {
      return this.errorDescription != null;
    }
    get aspectRatio() {
      if (this.size == null || this.size.width === 0 || this.size.height === 0) {
        return 1.0;
      }
      let aspectRatio = dart.notNull(this.size.width) / dart.notNull(this.size.height);
      if (aspectRatio <= 0) {
        return 1.0;
      }
      return aspectRatio;
    }
    copyWith(opts) {
      let t0, t0$, t0$0, t0$1, t0$2, t0$3, t0$4, t0$5, t0$6, t0$7, t0$8;
      let duration = opts && 'duration' in opts ? opts.duration : null;
      let size = opts && 'size' in opts ? opts.size : null;
      let position = opts && 'position' in opts ? opts.position : null;
      let caption = opts && 'caption' in opts ? opts.caption : null;
      let buffered = opts && 'buffered' in opts ? opts.buffered : null;
      let isPlaying = opts && 'isPlaying' in opts ? opts.isPlaying : null;
      let isLooping = opts && 'isLooping' in opts ? opts.isLooping : null;
      let isBuffering = opts && 'isBuffering' in opts ? opts.isBuffering : null;
      let volume = opts && 'volume' in opts ? opts.volume : null;
      let playbackSpeed = opts && 'playbackSpeed' in opts ? opts.playbackSpeed : null;
      let errorDescription = opts && 'errorDescription' in opts ? opts.errorDescription : null;
      return new video_player.VideoPlayerValue.new({duration: (t0 = duration, t0 == null ? this.duration : t0), size: (t0$ = size, t0$ == null ? this.size : t0$), position: (t0$0 = position, t0$0 == null ? this.position : t0$0), caption: (t0$1 = caption, t0$1 == null ? this.caption : t0$1), buffered: (t0$2 = buffered, t0$2 == null ? this.buffered : t0$2), isPlaying: (t0$3 = isPlaying, t0$3 == null ? this.isPlaying : t0$3), isLooping: (t0$4 = isLooping, t0$4 == null ? this.isLooping : t0$4), isBuffering: (t0$5 = isBuffering, t0$5 == null ? this.isBuffering : t0$5), volume: (t0$6 = volume, t0$6 == null ? this.volume : t0$6), playbackSpeed: (t0$7 = playbackSpeed, t0$7 == null ? this.playbackSpeed : t0$7), errorDescription: (t0$8 = errorDescription, t0$8 == null ? this.errorDescription : t0$8)});
    }
    toString() {
      return dart.str(this.runtimeType) + "(" + "duration: " + dart.str(this.duration) + ", " + "size: " + dart.str(this.size) + ", " + "position: " + dart.str(this.position) + ", " + "caption: " + dart.str(this.caption) + ", " + "buffered: [" + dart.str(this.buffered[$join](", ")) + "], " + "isPlaying: " + dart.str(this.isPlaying) + ", " + "isLooping: " + dart.str(this.isLooping) + ", " + "isBuffering: " + dart.str(this.isBuffering) + ", " + "volume: " + dart.str(this.volume) + ", " + "playbackSpeed: " + dart.str(this.playbackSpeed) + ", " + "errorDescription: " + dart.str(this.errorDescription) + ")";
    }
  };
  (video_player.VideoPlayerValue.new = function(opts) {
    let duration = opts && 'duration' in opts ? opts.duration : null;
    let size = opts && 'size' in opts ? opts.size : null;
    let position = opts && 'position' in opts ? opts.position : C[0] || CT.C0;
    let caption = opts && 'caption' in opts ? opts.caption : C[1] || CT.C1;
    let buffered = opts && 'buffered' in opts ? opts.buffered : C[2] || CT.C2;
    let isPlaying = opts && 'isPlaying' in opts ? opts.isPlaying : false;
    let isLooping = opts && 'isLooping' in opts ? opts.isLooping : false;
    let isBuffering = opts && 'isBuffering' in opts ? opts.isBuffering : false;
    let volume = opts && 'volume' in opts ? opts.volume : 1;
    let playbackSpeed = opts && 'playbackSpeed' in opts ? opts.playbackSpeed : 1;
    let errorDescription = opts && 'errorDescription' in opts ? opts.errorDescription : null;
    this[duration$] = duration;
    this[size$] = size;
    this[position$] = position;
    this[caption$] = caption;
    this[buffered$] = buffered;
    this[isPlaying$] = isPlaying;
    this[isLooping$] = isLooping;
    this[isBuffering$] = isBuffering;
    this[volume$] = volume;
    this[playbackSpeed$] = playbackSpeed;
    this[errorDescription$] = errorDescription;
    ;
  }).prototype = video_player.VideoPlayerValue.prototype;
  (video_player.VideoPlayerValue.uninitialized = function() {
    video_player.VideoPlayerValue.new.call(this, {duration: null});
  }).prototype = video_player.VideoPlayerValue.prototype;
  (video_player.VideoPlayerValue.erroneous = function(errorDescription) {
    video_player.VideoPlayerValue.new.call(this, {duration: null, errorDescription: errorDescription});
  }).prototype = video_player.VideoPlayerValue.prototype;
  dart.addTypeTests(video_player.VideoPlayerValue);
  dart.addTypeCaches(video_player.VideoPlayerValue);
  dart.setMethodSignature(video_player.VideoPlayerValue, () => ({
    __proto__: dart.getMethods(video_player.VideoPlayerValue.__proto__),
    copyWith: dart.fnType(dart.legacy(video_player.VideoPlayerValue), [], {buffered: dart.legacy(core.List$(dart.legacy(video_player_platform_interface.DurationRange))), caption: dart.legacy(closed_caption_file.Caption), duration: dart.legacy(core.Duration), errorDescription: dart.legacy(core.String), isBuffering: dart.legacy(core.bool), isLooping: dart.legacy(core.bool), isPlaying: dart.legacy(core.bool), playbackSpeed: dart.legacy(core.double), position: dart.legacy(core.Duration), size: dart.legacy(ui.Size), volume: dart.legacy(core.double)}, {}),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setGetterSignature(video_player.VideoPlayerValue, () => ({
    __proto__: dart.getGetters(video_player.VideoPlayerValue.__proto__),
    initialized: dart.legacy(core.bool),
    hasError: dart.legacy(core.bool),
    aspectRatio: dart.legacy(core.double)
  }));
  dart.setLibraryUri(video_player.VideoPlayerValue, I[0]);
  dart.setFieldSignature(video_player.VideoPlayerValue, () => ({
    __proto__: dart.getFields(video_player.VideoPlayerValue.__proto__),
    duration: dart.finalFieldType(dart.legacy(core.Duration)),
    position: dart.finalFieldType(dart.legacy(core.Duration)),
    caption: dart.finalFieldType(dart.legacy(closed_caption_file.Caption)),
    buffered: dart.finalFieldType(dart.legacy(core.List$(dart.legacy(video_player_platform_interface.DurationRange)))),
    isPlaying: dart.finalFieldType(dart.legacy(core.bool)),
    isLooping: dart.finalFieldType(dart.legacy(core.bool)),
    isBuffering: dart.finalFieldType(dart.legacy(core.bool)),
    volume: dart.finalFieldType(dart.legacy(core.double)),
    playbackSpeed: dart.finalFieldType(dart.legacy(core.double)),
    errorDescription: dart.finalFieldType(dart.legacy(core.String)),
    size: dart.finalFieldType(dart.legacy(ui.Size))
  }));
  dart.defineExtensionMethods(video_player.VideoPlayerValue, ['toString']);
  var dataSource$ = dart.privateName(video_player, "VideoPlayerController.dataSource");
  var formatHint$ = dart.privateName(video_player, "VideoPlayerController.formatHint");
  var dataSourceType = dart.privateName(video_player, "VideoPlayerController.dataSourceType");
  var videoPlayerOptions$ = dart.privateName(video_player, "VideoPlayerController.videoPlayerOptions");
  var package$ = dart.privateName(video_player, "VideoPlayerController.package");
  var closedCaptionFile$ = dart.privateName(video_player, "VideoPlayerController.closedCaptionFile");
  var _textureId = dart.privateName(video_player, "_textureId");
  var _closedCaptionFile = dart.privateName(video_player, "_closedCaptionFile");
  var _timer = dart.privateName(video_player, "_timer");
  var _isDisposed = dart.privateName(video_player, "_isDisposed");
  var _creatingCompleter = dart.privateName(video_player, "_creatingCompleter");
  var _eventSubscription = dart.privateName(video_player, "_eventSubscription");
  var _lifeCycleObserver = dart.privateName(video_player, "_lifeCycleObserver");
  var _name = dart.privateName(video_player_platform_interface, "_name");
  var _applyLooping = dart.privateName(video_player, "_applyLooping");
  var _applyVolume = dart.privateName(video_player, "_applyVolume");
  var _applyPlayPause = dart.privateName(video_player, "_applyPlayPause");
  var _getCaptionAt = dart.privateName(video_player, "_getCaptionAt");
  var _updatePosition = dart.privateName(video_player, "_updatePosition");
  var _applyPlaybackSpeed = dart.privateName(video_player, "_applyPlaybackSpeed");
  const dispose = Symbol("dispose");
  video_player.VideoPlayerController = class VideoPlayerController extends change_notifier.ValueNotifier$(dart.legacy(video_player.VideoPlayerValue)) {
    get dataSource() {
      return this[dataSource$];
    }
    set dataSource(value) {
      super.dataSource = value;
    }
    get formatHint() {
      return this[formatHint$];
    }
    set formatHint(value) {
      super.formatHint = value;
    }
    get dataSourceType() {
      return this[dataSourceType];
    }
    set dataSourceType(value) {
      super.dataSourceType = value;
    }
    get videoPlayerOptions() {
      return this[videoPlayerOptions$];
    }
    set videoPlayerOptions(value) {
      super.videoPlayerOptions = value;
    }
    get package() {
      return this[package$];
    }
    set package(value) {
      super.package = value;
    }
    get closedCaptionFile() {
      return this[closedCaptionFile$];
    }
    set closedCaptionFile(value) {
      super.closedCaptionFile = value;
    }
    get textureId() {
      return this[_textureId];
    }
    initialize() {
      return async.async(dart.void, (function* initialize() {
        let t0;
        this[_lifeCycleObserver] = new video_player._VideoAppLifeCycleObserver.new(this);
        this[_lifeCycleObserver].initialize();
        this[_creatingCompleter] = T.CompleterOfvoid().new();
        let dataSourceDescription = null;
        switch (this.dataSourceType) {
          case C[3] || CT.C3:
          {
            dataSourceDescription = new video_player_platform_interface.DataSource.new({sourceType: video_player_platform_interface.DataSourceType.asset, asset: this.dataSource, package: this.package});
            break;
          }
          case C[4] || CT.C4:
          {
            dataSourceDescription = new video_player_platform_interface.DataSource.new({sourceType: video_player_platform_interface.DataSourceType.network, uri: this.dataSource, formatHint: this.formatHint});
            break;
          }
          case C[5] || CT.C5:
          {
            dataSourceDescription = new video_player_platform_interface.DataSource.new({sourceType: video_player_platform_interface.DataSourceType.file, uri: this.dataSource});
            break;
          }
        }
        if ((t0 = this.videoPlayerOptions, t0 == null ? null : t0.mixWithOthers) != null) {
          yield video_player._videoPlayerPlatform.setMixWithOthers(this.videoPlayerOptions.mixWithOthers);
        }
        this[_textureId] = (yield video_player._videoPlayerPlatform.create(dataSourceDescription));
        this[_creatingCompleter].complete(null);
        let initializingCompleter = T.CompleterOfvoid().new();
        const eventListener = event => {
          let t0;
          if (dart.test(this[_isDisposed])) {
            return;
          }
          switch (event.eventType) {
            case C[6] || CT.C6:
            {
              this.value = this.value.copyWith({duration: event.duration, size: event.size});
              initializingCompleter.complete(null);
              this[_applyLooping]();
              this[_applyVolume]();
              this[_applyPlayPause]();
              break;
            }
            case C[7] || CT.C7:
            {
              this.value = this.value.copyWith({isPlaying: false, position: this.value.duration});
              t0 = this[_timer];
              t0 == null ? null : t0.cancel();
              break;
            }
            case C[8] || CT.C8:
            {
              this.value = this.value.copyWith({buffered: event.buffered});
              break;
            }
            case C[9] || CT.C9:
            {
              this.value = this.value.copyWith({isBuffering: true});
              break;
            }
            case C[10] || CT.C10:
            {
              this.value = this.value.copyWith({isBuffering: false});
              break;
            }
            case C[11] || CT.C11:
            {
              break;
            }
          }
        };
        dart.fn(eventListener, T.VideoEventLTovoid());
        if (this.closedCaptionFile != null) {
          if (this[_closedCaptionFile] == null) {
            this[_closedCaptionFile] = (yield this.closedCaptionFile);
          }
          this.value = this.value.copyWith({caption: this[_getCaptionAt](this.value.position)});
        }
        const errorListener = obj => {
          let t0;
          let e = T.PlatformExceptionL().as(obj);
          this.value = new video_player.VideoPlayerValue.erroneous(e.message);
          t0 = this[_timer];
          t0 == null ? null : t0.cancel();
          if (!dart.test(initializingCompleter.isCompleted)) {
            initializingCompleter.completeError(obj);
          }
        };
        dart.fn(errorListener, T.ObjectLTovoid());
        this[_eventSubscription] = video_player._videoPlayerPlatform.videoEventsFor(this[_textureId]).listen(eventListener, {onError: errorListener});
        return initializingCompleter.future;
      }).bind(this));
    }
    dispose() {
      return async.async(dart.void, (function* dispose$() {
        let t0, t0$;
        if (this[_creatingCompleter] != null) {
          yield this[_creatingCompleter].future;
          if (!dart.test(this[_isDisposed])) {
            this[_isDisposed] = true;
            t0 = this[_timer];
            t0 == null ? null : t0.cancel();
            yield (t0$ = this[_eventSubscription], t0$ == null ? null : t0$.cancel());
            yield video_player._videoPlayerPlatform.dispose(this[_textureId]);
          }
          this[_lifeCycleObserver].dispose();
        }
        this[_isDisposed] = true;
        this[dispose]();
      }).bind(this));
    }
    play() {
      return async.async(dart.void, (function* play() {
        this.value = this.value.copyWith({isPlaying: true});
        yield this[_applyPlayPause]();
      }).bind(this));
    }
    setLooping(looping) {
      return async.async(dart.void, (function* setLooping() {
        this.value = this.value.copyWith({isLooping: looping});
        yield this[_applyLooping]();
      }).bind(this));
    }
    pause() {
      return async.async(dart.void, (function* pause() {
        this.value = this.value.copyWith({isPlaying: false});
        yield this[_applyPlayPause]();
      }).bind(this));
    }
    [_applyLooping]() {
      return async.async(dart.void, (function* _applyLooping() {
        if (!dart.test(this.value.initialized) || dart.test(this[_isDisposed])) {
          return;
        }
        yield video_player._videoPlayerPlatform.setLooping(this[_textureId], this.value.isLooping);
      }).bind(this));
    }
    [_applyPlayPause]() {
      return async.async(dart.void, (function* _applyPlayPause() {
        let t0, t0$;
        if (!dart.test(this.value.initialized) || dart.test(this[_isDisposed])) {
          return;
        }
        if (dart.test(this.value.isPlaying)) {
          yield video_player._videoPlayerPlatform.play(this[_textureId]);
          t0 = this[_timer];
          t0 == null ? null : t0.cancel();
          this[_timer] = async.Timer.periodic(C[12] || CT.C12, dart.fn(timer => async.async(core.Null, (function*() {
            if (dart.test(this[_isDisposed])) {
              return;
            }
            let newPosition = (yield this.position);
            if (dart.test(this[_isDisposed])) {
              return;
            }
            this[_updatePosition](newPosition);
          }).bind(this)), T.TimerLToFutureLOfNull()));
          yield this[_applyPlaybackSpeed]();
        } else {
          t0$ = this[_timer];
          t0$ == null ? null : t0$.cancel();
          yield video_player._videoPlayerPlatform.pause(this[_textureId]);
        }
      }).bind(this));
    }
    [_applyVolume]() {
      return async.async(dart.void, (function* _applyVolume() {
        if (!dart.test(this.value.initialized) || dart.test(this[_isDisposed])) {
          return;
        }
        yield video_player._videoPlayerPlatform.setVolume(this[_textureId], this.value.volume);
      }).bind(this));
    }
    [_applyPlaybackSpeed]() {
      return async.async(dart.void, (function* _applyPlaybackSpeed() {
        if (!dart.test(this.value.initialized) || dart.test(this[_isDisposed])) {
          return;
        }
        if (!dart.test(this.value.isPlaying)) return;
        yield video_player._videoPlayerPlatform.setPlaybackSpeed(this[_textureId], this.value.playbackSpeed);
      }).bind(this));
    }
    get position() {
      return async.async(T.DurationL(), (function* position() {
        if (dart.test(this[_isDisposed])) {
          return null;
        }
        return yield video_player._videoPlayerPlatform.getPosition(this[_textureId]);
      }).bind(this));
    }
    seekTo(position) {
      return async.async(dart.void, (function* seekTo() {
        if (dart.test(this[_isDisposed])) {
          return;
        }
        if (dart.test(position['>'](this.value.duration))) {
          position = this.value.duration;
        } else if (dart.test(position['<'](C[0] || CT.C0))) {
          position = C[0] || CT.C0;
        }
        yield video_player._videoPlayerPlatform.seekTo(this[_textureId], position);
        this[_updatePosition](position);
      }).bind(this));
    }
    setVolume(volume) {
      return async.async(dart.void, (function* setVolume() {
        this.value = this.value.copyWith({volume: volume[$clamp](0.0, 1.0)});
        yield this[_applyVolume]();
      }).bind(this));
    }
    setPlaybackSpeed(speed) {
      return async.async(dart.void, (function* setPlaybackSpeed() {
        if (dart.notNull(speed) < 0) {
          dart.throw(new core.ArgumentError.value(speed, "Negative playback speeds are generally unsupported."));
        } else if (speed === 0) {
          dart.throw(new core.ArgumentError.value(speed, "Zero playback speed is generally unsupported. Consider using [pause]."));
        }
        this.value = this.value.copyWith({playbackSpeed: speed});
        yield this[_applyPlaybackSpeed]();
      }).bind(this));
    }
    [_getCaptionAt](position) {
      if (this[_closedCaptionFile] == null) {
        return new closed_caption_file.Caption.new();
      }
      for (let caption of this[_closedCaptionFile].captions) {
        if (dart.test(caption.start['<='](position)) && dart.test(caption.end['>='](position))) {
          return caption;
        }
      }
      return new closed_caption_file.Caption.new();
    }
    [_updatePosition](position) {
      this.value = this.value.copyWith({position: position});
      this.value = this.value.copyWith({caption: this[_getCaptionAt](position)});
    }
    [dispose]() {
      return super.dispose();
    }
  };
  (video_player.VideoPlayerController.asset = function(dataSource, opts) {
    let $package = opts && 'package' in opts ? opts.package : null;
    let closedCaptionFile = opts && 'closedCaptionFile' in opts ? opts.closedCaptionFile : null;
    let videoPlayerOptions = opts && 'videoPlayerOptions' in opts ? opts.videoPlayerOptions : null;
    this[_textureId] = null;
    this[_closedCaptionFile] = null;
    this[_timer] = null;
    this[_isDisposed] = false;
    this[_creatingCompleter] = null;
    this[_eventSubscription] = null;
    this[_lifeCycleObserver] = null;
    this[dataSource$] = dataSource;
    this[package$] = $package;
    this[closedCaptionFile$] = closedCaptionFile;
    this[videoPlayerOptions$] = videoPlayerOptions;
    this[dataSourceType] = video_player_platform_interface.DataSourceType.asset;
    this[formatHint$] = null;
    video_player.VideoPlayerController.__proto__.new.call(this, new video_player.VideoPlayerValue.new({duration: null}));
    ;
  }).prototype = video_player.VideoPlayerController.prototype;
  (video_player.VideoPlayerController.network = function(dataSource, opts) {
    let formatHint = opts && 'formatHint' in opts ? opts.formatHint : null;
    let closedCaptionFile = opts && 'closedCaptionFile' in opts ? opts.closedCaptionFile : null;
    let videoPlayerOptions = opts && 'videoPlayerOptions' in opts ? opts.videoPlayerOptions : null;
    this[_textureId] = null;
    this[_closedCaptionFile] = null;
    this[_timer] = null;
    this[_isDisposed] = false;
    this[_creatingCompleter] = null;
    this[_eventSubscription] = null;
    this[_lifeCycleObserver] = null;
    this[dataSource$] = dataSource;
    this[formatHint$] = formatHint;
    this[closedCaptionFile$] = closedCaptionFile;
    this[videoPlayerOptions$] = videoPlayerOptions;
    this[dataSourceType] = video_player_platform_interface.DataSourceType.network;
    this[package$] = null;
    video_player.VideoPlayerController.__proto__.new.call(this, new video_player.VideoPlayerValue.new({duration: null}));
    ;
  }).prototype = video_player.VideoPlayerController.prototype;
  (video_player.VideoPlayerController.file = function(file, opts) {
    let closedCaptionFile = opts && 'closedCaptionFile' in opts ? opts.closedCaptionFile : null;
    let videoPlayerOptions = opts && 'videoPlayerOptions' in opts ? opts.videoPlayerOptions : null;
    this[_textureId] = null;
    this[_closedCaptionFile] = null;
    this[_timer] = null;
    this[_isDisposed] = false;
    this[_creatingCompleter] = null;
    this[_eventSubscription] = null;
    this[_lifeCycleObserver] = null;
    this[closedCaptionFile$] = closedCaptionFile;
    this[videoPlayerOptions$] = videoPlayerOptions;
    this[dataSource$] = "file://" + dart.str(file.path);
    this[dataSourceType] = video_player_platform_interface.DataSourceType.file;
    this[package$] = null;
    this[formatHint$] = null;
    video_player.VideoPlayerController.__proto__.new.call(this, new video_player.VideoPlayerValue.new({duration: null}));
    ;
  }).prototype = video_player.VideoPlayerController.prototype;
  dart.addTypeTests(video_player.VideoPlayerController);
  dart.addTypeCaches(video_player.VideoPlayerController);
  dart.setMethodSignature(video_player.VideoPlayerController, () => ({
    __proto__: dart.getMethods(video_player.VideoPlayerController.__proto__),
    initialize: dart.fnType(dart.legacy(async.Future$(dart.void)), []),
    dispose: dart.fnType(dart.legacy(async.Future$(dart.void)), []),
    play: dart.fnType(dart.legacy(async.Future$(dart.void)), []),
    setLooping: dart.fnType(dart.legacy(async.Future$(dart.void)), [dart.legacy(core.bool)]),
    pause: dart.fnType(dart.legacy(async.Future$(dart.void)), []),
    [_applyLooping]: dart.fnType(dart.legacy(async.Future$(dart.void)), []),
    [_applyPlayPause]: dart.fnType(dart.legacy(async.Future$(dart.void)), []),
    [_applyVolume]: dart.fnType(dart.legacy(async.Future$(dart.void)), []),
    [_applyPlaybackSpeed]: dart.fnType(dart.legacy(async.Future$(dart.void)), []),
    seekTo: dart.fnType(dart.legacy(async.Future$(dart.void)), [dart.legacy(core.Duration)]),
    setVolume: dart.fnType(dart.legacy(async.Future$(dart.void)), [dart.legacy(core.double)]),
    setPlaybackSpeed: dart.fnType(dart.legacy(async.Future$(dart.void)), [dart.legacy(core.double)]),
    [_getCaptionAt]: dart.fnType(dart.legacy(closed_caption_file.Caption), [dart.legacy(core.Duration)]),
    [_updatePosition]: dart.fnType(dart.void, [dart.legacy(core.Duration)])
  }));
  dart.setGetterSignature(video_player.VideoPlayerController, () => ({
    __proto__: dart.getGetters(video_player.VideoPlayerController.__proto__),
    textureId: dart.legacy(core.int),
    position: dart.legacy(async.Future$(dart.legacy(core.Duration)))
  }));
  dart.setLibraryUri(video_player.VideoPlayerController, I[0]);
  dart.setFieldSignature(video_player.VideoPlayerController, () => ({
    __proto__: dart.getFields(video_player.VideoPlayerController.__proto__),
    [_textureId]: dart.fieldType(dart.legacy(core.int)),
    dataSource: dart.finalFieldType(dart.legacy(core.String)),
    formatHint: dart.finalFieldType(dart.legacy(video_player_platform_interface.VideoFormat)),
    dataSourceType: dart.finalFieldType(dart.legacy(video_player_platform_interface.DataSourceType)),
    videoPlayerOptions: dart.finalFieldType(dart.legacy(video_player_platform_interface.VideoPlayerOptions)),
    package: dart.finalFieldType(dart.legacy(core.String)),
    closedCaptionFile: dart.finalFieldType(dart.legacy(async.Future$(dart.legacy(closed_caption_file.ClosedCaptionFile)))),
    [_closedCaptionFile]: dart.fieldType(dart.legacy(closed_caption_file.ClosedCaptionFile)),
    [_timer]: dart.fieldType(dart.legacy(async.Timer)),
    [_isDisposed]: dart.fieldType(dart.legacy(core.bool)),
    [_creatingCompleter]: dart.fieldType(dart.legacy(async.Completer$(dart.void))),
    [_eventSubscription]: dart.fieldType(dart.legacy(async.StreamSubscription)),
    [_lifeCycleObserver]: dart.fieldType(dart.legacy(video_player._VideoAppLifeCycleObserver))
  }));
  var _wasPlayingBeforePause = dart.privateName(video_player, "_wasPlayingBeforePause");
  var _controller$ = dart.privateName(video_player, "_controller");
  var _name$ = dart.privateName(ui, "_name");
  const Object_WidgetsBindingObserver$36 = class Object_WidgetsBindingObserver extends core.Object {};
  (Object_WidgetsBindingObserver$36.new = function() {
  }).prototype = Object_WidgetsBindingObserver$36.prototype;
  dart.applyMixin(Object_WidgetsBindingObserver$36, binding.WidgetsBindingObserver);
  video_player._VideoAppLifeCycleObserver = class _VideoAppLifeCycleObserver extends Object_WidgetsBindingObserver$36 {
    initialize() {
      binding.WidgetsBinding.instance.addObserver(this);
    }
    didChangeAppLifecycleState(state) {
      switch (state) {
        case C[13] || CT.C13:
        {
          this[_wasPlayingBeforePause] = this[_controller$].value.isPlaying;
          this[_controller$].pause();
          break;
        }
        case C[14] || CT.C14:
        {
          if (dart.test(this[_wasPlayingBeforePause])) {
            this[_controller$].play();
          }
          break;
        }
        default:
      }
    }
    dispose() {
      binding.WidgetsBinding.instance.removeObserver(this);
    }
  };
  (video_player._VideoAppLifeCycleObserver.new = function(_controller) {
    this[_wasPlayingBeforePause] = false;
    this[_controller$] = _controller;
    ;
  }).prototype = video_player._VideoAppLifeCycleObserver.prototype;
  dart.addTypeTests(video_player._VideoAppLifeCycleObserver);
  dart.addTypeCaches(video_player._VideoAppLifeCycleObserver);
  dart.setMethodSignature(video_player._VideoAppLifeCycleObserver, () => ({
    __proto__: dart.getMethods(video_player._VideoAppLifeCycleObserver.__proto__),
    initialize: dart.fnType(dart.void, []),
    didChangeAppLifecycleState: dart.fnType(dart.void, [dart.legacy(ui.AppLifecycleState)]),
    dispose: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(video_player._VideoAppLifeCycleObserver, I[0]);
  dart.setFieldSignature(video_player._VideoAppLifeCycleObserver, () => ({
    __proto__: dart.getFields(video_player._VideoAppLifeCycleObserver.__proto__),
    [_wasPlayingBeforePause]: dart.fieldType(dart.legacy(core.bool)),
    [_controller$]: dart.finalFieldType(dart.legacy(video_player.VideoPlayerController))
  }));
  var controller$ = dart.privateName(video_player, "VideoPlayer.controller");
  video_player.VideoPlayer = class VideoPlayer extends framework.StatefulWidget {
    get controller() {
      return this[controller$];
    }
    set controller(value) {
      super.controller = value;
    }
    createState() {
      return new video_player._VideoPlayerState.new();
    }
  };
  (video_player.VideoPlayer.new = function(controller, opts) {
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[controller$] = controller;
    video_player.VideoPlayer.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = video_player.VideoPlayer.prototype;
  dart.addTypeTests(video_player.VideoPlayer);
  dart.addTypeCaches(video_player.VideoPlayer);
  dart.setMethodSignature(video_player.VideoPlayer, () => ({
    __proto__: dart.getMethods(video_player.VideoPlayer.__proto__),
    createState: dart.fnType(dart.legacy(video_player._VideoPlayerState), [])
  }));
  dart.setLibraryUri(video_player.VideoPlayer, I[0]);
  dart.setFieldSignature(video_player.VideoPlayer, () => ({
    __proto__: dart.getFields(video_player.VideoPlayer.__proto__),
    controller: dart.finalFieldType(dart.legacy(video_player.VideoPlayerController))
  }));
  var _listener = dart.privateName(video_player, "_listener");
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  video_player._VideoPlayerState = class _VideoPlayerState extends framework.State$(dart.legacy(video_player.VideoPlayer)) {
    initState() {
      super.initState();
      this[_textureId] = this.widget.controller.textureId;
      this.widget.controller.addListener(this[_listener]);
    }
    didUpdateWidget(oldWidget) {
      T.VideoPlayerL().as(oldWidget);
      super.didUpdateWidget(oldWidget);
      oldWidget.controller.removeListener(this[_listener]);
      this[_textureId] = this.widget.controller.textureId;
      this.widget.controller.addListener(this[_listener]);
    }
    deactivate() {
      super.deactivate();
      this.widget.controller.removeListener(this[_listener]);
    }
    build(context) {
      return this[_textureId] == null ? new container.Container.new({$creationLocationd_0dea112b090073317d4: C[15] || CT.C15}) : video_player._videoPlayerPlatform.buildView(this[_textureId]);
    }
  };
  (video_player._VideoPlayerState.new = function() {
    this[_listener] = null;
    this[_textureId] = null;
    video_player._VideoPlayerState.__proto__.new.call(this);
    this[_listener] = dart.fn(() => {
      let newTextureId = this.widget.controller.textureId;
      if (newTextureId != this[_textureId]) {
        this.setState(dart.fn(() => {
          this[_textureId] = newTextureId;
        }, T.VoidToNull()));
      }
    }, T.VoidToNull());
  }).prototype = video_player._VideoPlayerState.prototype;
  dart.addTypeTests(video_player._VideoPlayerState);
  dart.addTypeCaches(video_player._VideoPlayerState);
  dart.setMethodSignature(video_player._VideoPlayerState, () => ({
    __proto__: dart.getMethods(video_player._VideoPlayerState.__proto__),
    didUpdateWidget: dart.fnType(dart.void, [dart.legacy(core.Object)]),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(video_player._VideoPlayerState, I[0]);
  dart.setFieldSignature(video_player._VideoPlayerState, () => ({
    __proto__: dart.getFields(video_player._VideoPlayerState.__proto__),
    [_listener]: dart.fieldType(dart.legacy(dart.fnType(dart.void, []))),
    [_textureId]: dart.fieldType(dart.legacy(core.int))
  }));
  var playedColor$ = dart.privateName(video_player, "VideoProgressColors.playedColor");
  var bufferedColor$ = dart.privateName(video_player, "VideoProgressColors.bufferedColor");
  var backgroundColor$ = dart.privateName(video_player, "VideoProgressColors.backgroundColor");
  var Color_value = dart.privateName(ui, "Color.value");
  video_player.VideoProgressColors = class VideoProgressColors extends core.Object {
    get playedColor() {
      return this[playedColor$];
    }
    set playedColor(value) {
      super.playedColor = value;
    }
    get bufferedColor() {
      return this[bufferedColor$];
    }
    set bufferedColor(value) {
      super.bufferedColor = value;
    }
    get backgroundColor() {
      return this[backgroundColor$];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
  };
  (video_player.VideoProgressColors.new = function(opts) {
    let playedColor = opts && 'playedColor' in opts ? opts.playedColor : C[17] || CT.C17;
    let bufferedColor = opts && 'bufferedColor' in opts ? opts.bufferedColor : C[18] || CT.C18;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : C[19] || CT.C19;
    this[playedColor$] = playedColor;
    this[bufferedColor$] = bufferedColor;
    this[backgroundColor$] = backgroundColor;
    ;
  }).prototype = video_player.VideoProgressColors.prototype;
  dart.addTypeTests(video_player.VideoProgressColors);
  dart.addTypeCaches(video_player.VideoProgressColors);
  dart.setLibraryUri(video_player.VideoProgressColors, I[0]);
  dart.setFieldSignature(video_player.VideoProgressColors, () => ({
    __proto__: dart.getFields(video_player.VideoProgressColors.__proto__),
    playedColor: dart.finalFieldType(dart.legacy(ui.Color)),
    bufferedColor: dart.finalFieldType(dart.legacy(ui.Color)),
    backgroundColor: dart.finalFieldType(dart.legacy(ui.Color))
  }));
  video_player._VideoScrubber = class _VideoScrubber extends framework.StatefulWidget {
    createState() {
      return new video_player._VideoScrubberState.new();
    }
  };
  (video_player._VideoScrubber.new = function(opts) {
    let child = opts && 'child' in opts ? opts.child : null;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this.child = child;
    this.controller = controller;
    video_player._VideoScrubber.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = video_player._VideoScrubber.prototype;
  dart.addTypeTests(video_player._VideoScrubber);
  dart.addTypeCaches(video_player._VideoScrubber);
  dart.setMethodSignature(video_player._VideoScrubber, () => ({
    __proto__: dart.getMethods(video_player._VideoScrubber.__proto__),
    createState: dart.fnType(dart.legacy(video_player._VideoScrubberState), [])
  }));
  dart.setLibraryUri(video_player._VideoScrubber, I[0]);
  dart.setFieldSignature(video_player._VideoScrubber, () => ({
    __proto__: dart.getFields(video_player._VideoScrubber.__proto__),
    child: dart.finalFieldType(dart.legacy(framework.Widget)),
    controller: dart.finalFieldType(dart.legacy(video_player.VideoPlayerController))
  }));
  var _controllerWasPlaying = dart.privateName(video_player, "_controllerWasPlaying");
  video_player._VideoScrubberState = class _VideoScrubberState extends framework.State$(dart.legacy(video_player._VideoScrubber)) {
    get controller() {
      return this.widget.controller;
    }
    build(context) {
      const seekToRelativePosition = globalPosition => {
        let box = T.RenderBoxL().as(context.findRenderObject());
        let tapPos = box.globalToLocal(globalPosition);
        let relative = dart.notNull(tapPos.dx) / dart.notNull(box.size.width);
        let position = this.controller.value.duration['*'](relative);
        this.controller.seekTo(position);
      };
      dart.fn(seekToRelativePosition, T.OffsetLTovoid());
      return new gesture_detector.GestureDetector.new({behavior: proxy_box.HitTestBehavior.opaque, child: this.widget.child, onHorizontalDragStart: dart.fn(details => {
          if (!dart.test(this.controller.value.initialized)) {
            return;
          }
          this[_controllerWasPlaying] = this.controller.value.isPlaying;
          if (dart.test(this[_controllerWasPlaying])) {
            this.controller.pause();
          }
        }, T.DragStartDetailsLToNull()), onHorizontalDragUpdate: dart.fn(details => {
          if (!dart.test(this.controller.value.initialized)) {
            return;
          }
          seekToRelativePosition(details.globalPosition);
        }, T.DragUpdateDetailsLToNull()), onHorizontalDragEnd: dart.fn(details => {
          if (dart.test(this[_controllerWasPlaying])) {
            this.controller.play();
          }
        }, T.DragEndDetailsLToNull()), onTapDown: dart.fn(details => {
          if (!dart.test(this.controller.value.initialized)) {
            return;
          }
          seekToRelativePosition(details.globalPosition);
        }, T.TapDownDetailsLToNull()), $creationLocationd_0dea112b090073317d4: C[20] || CT.C20});
    }
  };
  (video_player._VideoScrubberState.new = function() {
    this[_controllerWasPlaying] = false;
    video_player._VideoScrubberState.__proto__.new.call(this);
    ;
  }).prototype = video_player._VideoScrubberState.prototype;
  dart.addTypeTests(video_player._VideoScrubberState);
  dart.addTypeCaches(video_player._VideoScrubberState);
  dart.setMethodSignature(video_player._VideoScrubberState, () => ({
    __proto__: dart.getMethods(video_player._VideoScrubberState.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setGetterSignature(video_player._VideoScrubberState, () => ({
    __proto__: dart.getGetters(video_player._VideoScrubberState.__proto__),
    controller: dart.legacy(video_player.VideoPlayerController)
  }));
  dart.setLibraryUri(video_player._VideoScrubberState, I[0]);
  dart.setFieldSignature(video_player._VideoScrubberState, () => ({
    __proto__: dart.getFields(video_player._VideoScrubberState.__proto__),
    [_controllerWasPlaying]: dart.fieldType(dart.legacy(core.bool))
  }));
  var controller$0 = dart.privateName(video_player, "VideoProgressIndicator.controller");
  var colors$ = dart.privateName(video_player, "VideoProgressIndicator.colors");
  var allowScrubbing$ = dart.privateName(video_player, "VideoProgressIndicator.allowScrubbing");
  var padding$ = dart.privateName(video_player, "VideoProgressIndicator.padding");
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  video_player.VideoProgressIndicator = class VideoProgressIndicator extends framework.StatefulWidget {
    get controller() {
      return this[controller$0];
    }
    set controller(value) {
      super.controller = value;
    }
    get colors() {
      return this[colors$];
    }
    set colors(value) {
      super.colors = value;
    }
    get allowScrubbing() {
      return this[allowScrubbing$];
    }
    set allowScrubbing(value) {
      super.allowScrubbing = value;
    }
    get padding() {
      return this[padding$];
    }
    set padding(value) {
      super.padding = value;
    }
    createState() {
      return new video_player._VideoProgressIndicatorState.new();
    }
  };
  (video_player.VideoProgressIndicator.new = function(controller, opts) {
    let t0;
    let colors = opts && 'colors' in opts ? opts.colors : null;
    let allowScrubbing = opts && 'allowScrubbing' in opts ? opts.allowScrubbing : null;
    let padding = opts && 'padding' in opts ? opts.padding : C[28] || CT.C28;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[controller$0] = controller;
    this[allowScrubbing$] = allowScrubbing;
    this[padding$] = padding;
    this[colors$] = (t0 = colors, t0 == null ? new video_player.VideoProgressColors.new() : t0);
    video_player.VideoProgressIndicator.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = video_player.VideoProgressIndicator.prototype;
  dart.addTypeTests(video_player.VideoProgressIndicator);
  dart.addTypeCaches(video_player.VideoProgressIndicator);
  dart.setMethodSignature(video_player.VideoProgressIndicator, () => ({
    __proto__: dart.getMethods(video_player.VideoProgressIndicator.__proto__),
    createState: dart.fnType(dart.legacy(video_player._VideoProgressIndicatorState), [])
  }));
  dart.setLibraryUri(video_player.VideoProgressIndicator, I[0]);
  dart.setFieldSignature(video_player.VideoProgressIndicator, () => ({
    __proto__: dart.getFields(video_player.VideoProgressIndicator.__proto__),
    controller: dart.finalFieldType(dart.legacy(video_player.VideoPlayerController)),
    colors: dart.finalFieldType(dart.legacy(video_player.VideoProgressColors)),
    allowScrubbing: dart.finalFieldType(dart.legacy(core.bool)),
    padding: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsets))
  }));
  video_player._VideoProgressIndicatorState = class _VideoProgressIndicatorState extends framework.State$(dart.legacy(video_player.VideoProgressIndicator)) {
    get controller() {
      return this.widget.controller;
    }
    get colors() {
      return this.widget.colors;
    }
    initState() {
      super.initState();
      this.controller.addListener(this.listener);
    }
    deactivate() {
      this.controller.removeListener(this.listener);
      super.deactivate();
    }
    build(context) {
      let progressIndicator = null;
      if (dart.test(this.controller.value.initialized)) {
        let duration = this.controller.value.duration.inMilliseconds;
        let position = this.controller.value.position.inMilliseconds;
        let maxBuffering = 0;
        for (let range of this.controller.value.buffered) {
          let end = range.end.inMilliseconds;
          if (dart.notNull(end) > dart.notNull(maxBuffering)) {
            maxBuffering = end;
          }
        }
        progressIndicator = new basic.Stack.new({fit: stack.StackFit.passthrough, children: T.JSArrayOfWidgetL().of([new progress_indicator.LinearProgressIndicator.new({value: dart.notNull(maxBuffering) / dart.notNull(duration), valueColor: new (T.AlwaysStoppedAnimationOfColorL()).new(this.colors.bufferedColor), backgroundColor: this.colors.backgroundColor, $creationLocationd_0dea112b090073317d4: C[29] || CT.C29}), new progress_indicator.LinearProgressIndicator.new({value: dart.notNull(position) / dart.notNull(duration), valueColor: new (T.AlwaysStoppedAnimationOfColorL()).new(this.colors.playedColor), backgroundColor: colors.Colors.transparent, $creationLocationd_0dea112b090073317d4: C[34] || CT.C34})]), $creationLocationd_0dea112b090073317d4: C[39] || CT.C39});
      } else {
        progressIndicator = new progress_indicator.LinearProgressIndicator.new({value: null, valueColor: new (T.AlwaysStoppedAnimationOfColorL()).new(this.colors.playedColor), backgroundColor: this.colors.backgroundColor, $creationLocationd_0dea112b090073317d4: C[43] || CT.C43});
      }
      let paddedProgressIndicator = new basic.Padding.new({padding: this.widget.padding, child: progressIndicator, $creationLocationd_0dea112b090073317d4: C[48] || CT.C48});
      if (dart.test(this.widget.allowScrubbing)) {
        return new video_player._VideoScrubber.new({child: paddedProgressIndicator, controller: this.controller, $creationLocationd_0dea112b090073317d4: C[52] || CT.C52});
      } else {
        return paddedProgressIndicator;
      }
    }
  };
  (video_player._VideoProgressIndicatorState.new = function() {
    this.listener = null;
    video_player._VideoProgressIndicatorState.__proto__.new.call(this);
    this.listener = dart.fn(() => {
      if (!dart.test(this.mounted)) {
        return;
      }
      this.setState(dart.fn(() => {
      }, T.VoidToNull()));
    }, T.VoidToNull());
  }).prototype = video_player._VideoProgressIndicatorState.prototype;
  dart.addTypeTests(video_player._VideoProgressIndicatorState);
  dart.addTypeCaches(video_player._VideoProgressIndicatorState);
  dart.setMethodSignature(video_player._VideoProgressIndicatorState, () => ({
    __proto__: dart.getMethods(video_player._VideoProgressIndicatorState.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setGetterSignature(video_player._VideoProgressIndicatorState, () => ({
    __proto__: dart.getGetters(video_player._VideoProgressIndicatorState.__proto__),
    controller: dart.legacy(video_player.VideoPlayerController),
    colors: dart.legacy(video_player.VideoProgressColors)
  }));
  dart.setLibraryUri(video_player._VideoProgressIndicatorState, I[0]);
  dart.setFieldSignature(video_player._VideoProgressIndicatorState, () => ({
    __proto__: dart.getFields(video_player._VideoProgressIndicatorState.__proto__),
    listener: dart.fieldType(dart.legacy(dart.fnType(dart.void, [])))
  }));
  var text$ = dart.privateName(video_player, "ClosedCaption.text");
  var textStyle$ = dart.privateName(video_player, "ClosedCaption.textStyle");
  video_player.ClosedCaption = class ClosedCaption extends framework.StatelessWidget {
    get text() {
      return this[text$];
    }
    set text(value) {
      super.text = value;
    }
    get textStyle() {
      return this[textStyle$];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    build(context) {
      let t0;
      let effectiveTextStyle = (t0 = this.textStyle, t0 == null ? text.DefaultTextStyle.of(context).style.copyWith({fontSize: 36.0, color: colors.Colors.white}) : t0);
      if (this.text == null) {
        return new basic.SizedBox.shrink({$creationLocationd_0dea112b090073317d4: C[56] || CT.C56});
      }
      return new basic.Align.new({alignment: alignment.Alignment.bottomCenter, child: new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({bottom: 24.0}), child: new container.DecoratedBox.new({decoration: new box_decoration.BoxDecoration.new({color: new ui.Color.new(3087007744), borderRadius: new border_radius.BorderRadius.circular(2.0)}), child: new basic.Padding.new({padding: new edge_insets.EdgeInsets.symmetric({horizontal: 2.0}), child: new text.Text.new(this.text, {style: effectiveTextStyle, $creationLocationd_0dea112b090073317d4: C[57] || CT.C57}), $creationLocationd_0dea112b090073317d4: C[61] || CT.C61}), $creationLocationd_0dea112b090073317d4: C[65] || CT.C65}), $creationLocationd_0dea112b090073317d4: C[69] || CT.C69}), $creationLocationd_0dea112b090073317d4: C[73] || CT.C73});
    }
  };
  (video_player.ClosedCaption.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let text = opts && 'text' in opts ? opts.text : null;
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[text$] = text;
    this[textStyle$] = textStyle;
    video_player.ClosedCaption.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = video_player.ClosedCaption.prototype;
  dart.addTypeTests(video_player.ClosedCaption);
  dart.addTypeCaches(video_player.ClosedCaption);
  dart.setMethodSignature(video_player.ClosedCaption, () => ({
    __proto__: dart.getMethods(video_player.ClosedCaption.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(video_player.ClosedCaption, I[0]);
  dart.setFieldSignature(video_player.ClosedCaption, () => ({
    __proto__: dart.getFields(video_player.ClosedCaption.__proto__),
    text: dart.finalFieldType(dart.legacy(core.String)),
    textStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle))
  }));
  dart.defineLazy(video_player, {
    /*video_player._videoPlayerPlatform*/get _videoPlayerPlatform() {
      let t0;
      return t0 = video_player_platform_interface.VideoPlayerPlatform.instance, (() => {
        t0.init();
        return t0;
      })();
    }
  }, true);
  dart.trackLibraries("packages/video_player/video_player.dart", {
    "package:video_player/video_player.dart": video_player
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["video_player.dart"],"names":[],"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","file":"../../../../../../../../packages/video_player/video_player.dart.lib.js"}');
  // Exports:
  return {
    video_player: video_player
  };
}));

//# sourceMappingURL=video_player.dart.lib.js.map
