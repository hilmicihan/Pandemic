define(['dart_sdk', 'packages/proj4dart/src/classes/datum.dart', 'packages/proj4dart/src/constants/values.dart', 'packages/proj4dart/src/constants/units.dart', 'packages/proj4dart/src/constants/prime_meridians.dart', 'packages/proj4dart/src/constants/datums.dart', 'packages/proj4dart/src/common/derive_constants.dart'], (function load__packages__proj4dart__src__classes__proj_params_dart(dart_sdk, packages__proj4dart__src__classes__datum$46dart, packages__proj4dart__src__constants__values$46dart, packages__proj4dart__src__constants__units$46dart, packages__proj4dart__src__constants__prime_meridians$46dart, packages__proj4dart__src__constants__datums$46dart, packages__proj4dart__src__common__derive_constants$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const _js_helper = dart_sdk._js_helper;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const datum = packages__proj4dart__src__classes__datum$46dart.src__classes__datum;
  const values = packages__proj4dart__src__constants__values$46dart.src__constants__values;
  const units = packages__proj4dart__src__constants__units$46dart.src__constants__units;
  const prime_meridians = packages__proj4dart__src__constants__prime_meridians$46dart.src__constants__prime_meridians;
  const datums = packages__proj4dart__src__constants__datums$46dart.src__constants__datums;
  const derive_constants = packages__proj4dart__src__common__derive_constants$46dart.src__common__derive_constants;
  var proj_params = Object.create(dart.library);
  var $split = dartx.split;
  var $trim = dartx.trim;
  var $map = dartx.map;
  var $where = dartx.where;
  var $length = dartx.length;
  var $_get = dartx._get;
  var $_set = dartx._set;
  var $isNotEmpty = dartx.isNotEmpty;
  var $forEach = dartx.forEach;
  var $cast = dartx.cast;
  var $toString = dartx.toString;
  var $contains = dartx.contains;
  var $toLowerCase = dartx.toLowerCase;
  var $toList = dartx.toList;
  var StringL = () => (StringL = dart.constFn(dart.legacy(core.String)))();
  var ObjectL = () => (ObjectL = dart.constFn(dart.legacy(core.Object)))();
  var IdentityMapOfStringL$ObjectL = () => (IdentityMapOfStringL$ObjectL = dart.constFn(_js_helper.IdentityMap$(StringL(), ObjectL())))();
  var StringLToStringL = () => (StringLToStringL = dart.constFn(dart.fnType(StringL(), [StringL()])))();
  var boolL = () => (boolL = dart.constFn(dart.legacy(core.bool)))();
  var StringLToboolL = () => (StringLToboolL = dart.constFn(dart.fnType(boolL(), [StringL()])))();
  var StringLToNull = () => (StringLToNull = dart.constFn(dart.fnType(core.Null, [StringL()])))();
  var doubleL = () => (doubleL = dart.constFn(dart.legacy(core.double)))();
  var intL = () => (intL = dart.constFn(dart.legacy(core.int)))();
  var ListOfdoubleL = () => (ListOfdoubleL = dart.constFn(core.List$(doubleL())))();
  var ListLOfdoubleL = () => (ListLOfdoubleL = dart.constFn(dart.legacy(ListOfdoubleL())))();
  var ListOfObjectL = () => (ListOfObjectL = dart.constFn(core.List$(ObjectL())))();
  var ListLOfObjectL = () => (ListLOfObjectL = dart.constFn(dart.legacy(ListOfObjectL())))();
  var DatumL = () => (DatumL = dart.constFn(dart.legacy(datum.Datum)))();
  var StringLAndObjectLToNull = () => (StringLAndObjectLToNull = dart.constFn(dart.fnType(core.Null, [StringL(), ObjectL()])))();
  var StringTodouble = () => (StringTodouble = dart.constFn(dart.fnType(core.double, [core.String])))();
  var StringToNdouble = () => (StringToNdouble = dart.constFn(dart.nullable(StringTodouble())))();
  var StringAndFnTodouble = () => (StringAndFnTodouble = dart.constFn(dart.fnType(core.double, [core.String], [StringToNdouble()])))();
  var ObjectLTodoubleL = () => (ObjectLTodoubleL = dart.constFn(dart.fnType(doubleL(), [ObjectL()])))();
  const CT = Object.create(null);
  var L0 = "package:proj4dart/src/classes/proj_params.dart";
  dart.defineLazy(CT, {
    get C0() {
      return C0 = dart.fn(core.double.parse, StringAndFnTodouble());
    }
  }, false);
  var _iterateProps = dart.privateName(proj_params, "_iterateProps");
  var _addExtraProps = dart.privateName(proj_params, "_addExtraProps");
  var _parseDatumParams = dart.privateName(proj_params, "_parseDatumParams");
  var _getDatumParamsFromString = dart.privateName(proj_params, "_getDatumParamsFromString");
  var C0;
  var map = dart.privateName(proj_params, "ProjParams.map");
  var srsCode = dart.privateName(proj_params, "ProjParams.srsCode");
  proj_params.ProjParams = class ProjParams extends core.Object {
    get map() {
      return this[map];
    }
    set map(value) {
      this[map] = value;
    }
    get srsCode() {
      return this[srsCode];
    }
    set srsCode(value) {
      this[srsCode] = value;
    }
    get title() {
      return StringL().as(this.map[$_get]("title"));
    }
    get datumCode() {
      return StringL().as(this.map[$_get]("datumCode"));
    }
    get proj() {
      return StringL().as(this.map[$_get]("proj"));
    }
    get rf() {
      return doubleL().as(this.map[$_get]("rf"));
    }
    get lat0() {
      return doubleL().as(this.map[$_get]("lat0"));
    }
    get lat1() {
      return doubleL().as(this.map[$_get]("lat1"));
    }
    get lat2() {
      return doubleL().as(this.map[$_get]("lat2"));
    }
    get lat_ts() {
      return doubleL().as(this.map[$_get]("lat_ts"));
    }
    get long0() {
      let t0;
      return doubleL().as((t0 = this.map[$_get]("long0"), t0 == null ? 0 / 0 : t0));
    }
    get long1() {
      return doubleL().as(this.map[$_get]("long1"));
    }
    get long2() {
      return doubleL().as(this.map[$_get]("long2"));
    }
    get alpha() {
      return doubleL().as(this.map[$_get]("alpha"));
    }
    get longc() {
      return doubleL().as(this.map[$_get]("longc"));
    }
    get x0() {
      return doubleL().as(this.map[$_get]("x0"));
    }
    get y0() {
      return doubleL().as(this.map[$_get]("y0"));
    }
    get k0() {
      return doubleL().as(this.map[$_get]("k0"));
    }
    get k() {
      return doubleL().as(this.map[$_get]("k"));
    }
    get a() {
      return doubleL().as(this.map[$_get]("a"));
    }
    get b() {
      return doubleL().as(this.map[$_get]("b"));
    }
    get R_A() {
      return boolL().as(this.map[$_get]("R_A"));
    }
    get zone() {
      return intL().as(this.map[$_get]("zone"));
    }
    get utmSouth() {
      return boolL().as(this.map[$_get]("utmSouth"));
    }
    get datum_params() {
      return ListLOfdoubleL().as(ListLOfdoubleL().is(this.map[$_get]("datum_params")) ? this.map[$_get]("datum_params") : this[_parseDatumParams](ListLOfObjectL().as(this.map[$_get]("datum_params"))));
    }
    get to_meter() {
      return doubleL().as(this.map[$_get]("to_meter"));
    }
    get units() {
      return StringL().as(this.map[$_get]("units"));
    }
    get from_greenwich() {
      return doubleL().as(this.map[$_get]("from_greenwich"));
    }
    get nadgrids() {
      return StringL().as(this.map[$_get]("nadgrids"));
    }
    get axis() {
      return StringL().as(this.map[$_get]("axis"));
    }
    get no_defs() {
      return boolL().as(this.map[$_get]("no_defs"));
    }
    get ellps() {
      return StringL().as(this.map[$_get]("ellps"));
    }
    get datumName() {
      return StringL().as(this.map[$_get]("datumName"));
    }
    get sphere() {
      return boolL().as(this.map[$_get]("sphere"));
    }
    get es() {
      return doubleL().as(this.map[$_get]("es"));
    }
    get e() {
      return doubleL().as(this.map[$_get]("e"));
    }
    get ep2() {
      return doubleL().as(this.map[$_get]("ep2"));
    }
    get datum() {
      return DatumL().as(this.map[$_get]("datum"));
    }
    [_iterateProps](paramObj) {
      paramObj[$forEach](dart.fn((key, v) => {
        let t0;
        switch (key) {
          case "title":
          {
            this.map[$_set]("title", v);
            break;
          }
          case "rf":
          {
            this.map[$_set]("rf", doubleL().is(v) ? v : core.double.parse(core.String.as(v)));
            break;
          }
          case "lat_0":
          {
            this.map[$_set]("lat0", doubleL().is(v) ? v : dart.notNull(core.double.parse(core.String.as(v))) * dart.notNull(values.D2R));
            break;
          }
          case "lat_1":
          {
            this.map[$_set]("lat1", doubleL().is(v) ? v : dart.notNull(core.double.parse(core.String.as(v))) * dart.notNull(values.D2R));
            break;
          }
          case "lat_2":
          {
            this.map[$_set]("lat2", doubleL().is(v) ? v : dart.notNull(core.double.parse(core.String.as(v))) * dart.notNull(values.D2R));
            break;
          }
          case "lat_ts":
          {
            this.map[$_set]("lat_ts", doubleL().is(v) ? v : dart.notNull(core.double.parse(core.String.as(v))) * dart.notNull(values.D2R));
            break;
          }
          case "lon_0":
          {
            this.map[$_set]("long0", doubleL().is(v) ? v : dart.notNull(core.double.parse(core.String.as(v))) * dart.notNull(values.D2R));
            break;
          }
          case "lon_1":
          {
            this.map[$_set]("long1", doubleL().is(v) ? v : dart.notNull(core.double.parse(core.String.as(v))) * dart.notNull(values.D2R));
            break;
          }
          case "lon_2":
          {
            this.map[$_set]("long2", doubleL().is(v) ? v : dart.notNull(core.double.parse(core.String.as(v))) * dart.notNull(values.D2R));
            break;
          }
          case "alpha":
          {
            this.map[$_set]("alpha", doubleL().is(v) ? v : dart.notNull(core.double.parse(core.String.as(v))) * dart.notNull(values.D2R));
            break;
          }
          case "lonc":
          {
            this.map[$_set]("longc", doubleL().is(v) ? v : dart.notNull(core.double.parse(core.String.as(v))) * dart.notNull(values.D2R));
            break;
          }
          case "x_0":
          {
            this.map[$_set]("x0", doubleL().is(v) ? v : core.double.parse(core.String.as(v)));
            break;
          }
          case "y_0":
          {
            this.map[$_set]("y0", doubleL().is(v) ? v : core.double.parse(core.String.as(v)));
            break;
          }
          case "k_0":
          {
            this.map[$_set]("k0", doubleL().is(v) ? v : core.double.parse(core.String.as(v)));
            break;
          }
          case "k":
          {
            this.map[$_set]("k0", doubleL().is(v) ? v : core.double.parse(core.String.as(v)));
            break;
          }
          case "a":
          {
            this.map[$_set]("a", doubleL().is(v) ? v : core.double.parse(core.String.as(v)));
            break;
          }
          case "b":
          {
            this.map[$_set]("b", doubleL().is(v) ? v : core.double.parse(core.String.as(v)));
            break;
          }
          case "r_a":
          {
            this.map[$_set]("R_A", true);
            break;
          }
          case "zone":
          {
            this.map[$_set]("zone", intL().is(v) ? v : core.int.parse(core.String.as(v)));
            break;
          }
          case "south":
          {
            this.map[$_set]("utmSouth", true);
            break;
          }
          case "towgs84":
          {
            this.map[$_set]("datum_params", this[_getDatumParamsFromString](dart.toString(v)));
            break;
          }
          case "to_meter":
          {
            this.map[$_set]("to_meter", doubleL().is(v) ? v : core.double.parse(core.String.as(v)));
            break;
          }
          case "units":
          {
            this.map[$_set]("units", v);
            let unit = units.match(StringL().as(v));
            if (unit != null) {
              this.map[$_set]("to_meter", unit.to_meter);
            }
            break;
          }
          case "from_greenwich":
          {
            this.map[$_set]("from_greenwich", doubleL().is(v) ? v : dart.notNull(core.double.parse(core.String.as(v))) * dart.notNull(values.D2R));
            break;
          }
          case "pm":
          {
            let primeMeridian = prime_meridians.match(StringL().as(v));
            this.map[$_set]("from_greenwich", dart.notNull((t0 = primeMeridian, t0 == null ? doubleL().is(v) ? v : core.double.parse(core.String.as(v)) : t0)) * dart.notNull(values.D2R));
            break;
          }
          case "datum":
          {
            this.map[$_set]("datumCode", v);
            break;
          }
          case "projName":
          {
            this.map[$_set]("proj", v);
            break;
          }
          case "proj":
          {
            this.map[$_set]("proj", v);
            break;
          }
          case "nadgrids":
          {
            if (dart.equals(v, "@null")) {
              this.map[$_set]("datumCode", "none");
            } else {
              this.map[$_set]("nadgrids", v);
            }
            break;
          }
          case "datum_params":
          {
            this.map[$_set]("datum_params", v);
            break;
          }
          case "axis":
          {
            let legalAxis = "ewnsud";
            let axis = dart.toString(v);
            if (axis.length === 3 && legalAxis[$contains](axis[$_get](0)) && legalAxis[$contains](axis[$_get](1)) && legalAxis[$contains](axis[$_get](2))) {
              this.map[$_set]("axis", v);
            }
            break;
          }
          default:
          {
            this.map[$_set](key, v);
            break;
          }
        }
      }, StringLAndObjectLToNull()));
      if (this.datumCode != null && this.datumCode !== "WGS84") {
        this.map[$_set]("datumCode", this.datumCode[$toLowerCase]());
      }
    }
    [_addExtraProps]() {
      let t0, t0$, t0$0, t0$1;
      if (this.datumCode != null && this.datumCode !== "none") {
        let datumDef = datums.match(this.datumCode);
        if (datumDef != null) {
          this.map[$_set]("datum_params", datumDef.towgs84 != null ? this[_getDatumParamsFromString](datumDef.towgs84) : null);
          this.map[$_set]("ellps", datumDef.ellipse);
          this.map[$_set]("datumName", (t0 = datumDef.datumName, t0 == null ? this.datumCode : t0));
        }
      }
      this.map[$_set]("k0", (t0$ = this.k0, t0$ == null ? 1.0 : t0$));
      this.map[$_set]("axis", (t0$0 = this.axis, t0$0 == null ? "enu" : t0$0));
      this.map[$_set]("ellps", (t0$1 = this.ellps, t0$1 == null ? "wgs84" : t0$1));
      let sphere = derive_constants.sphere(this.a, this.b, this.rf, this.ellps, boolL().as(this.map[$_get]("sphere")));
      let ecc = derive_constants.eccentricity(doubleL().as(sphere[$_get]("a")), doubleL().as(sphere[$_get]("b")), doubleL().as(sphere[$_get]("rf")), this.R_A);
      this.map[$_set]("a", sphere[$_get]("a"));
      this.map[$_set]("b", sphere[$_get]("b"));
      this.map[$_set]("rf", sphere[$_get]("rf"));
      this.map[$_set]("sphere", sphere[$_get]("sphere"));
      this.map[$_set]("es", ecc[$_get]("es"));
      this.map[$_set]("e", ecc[$_get]("e"));
      this.map[$_set]("ep2", ecc[$_get]("ep2"));
      if (this.datum == null) {
        this.map[$_set]("datum", new datum.Datum.new(this.datumCode, this.datum_params, this.a, this.b, this.es, this.ep2));
      }
    }
    [_getDatumParamsFromString](towgs84) {
      return towgs84[$split](",")[$map](doubleL(), C0 || CT.C0)[$toList]();
    }
    [_parseDatumParams](paramsList) {
      return paramsList != null ? paramsList[$map](doubleL(), dart.fn(e => core.double.parse(dart.toString(e)), ObjectLTodoubleL()))[$toList]() : null;
    }
  };
  (proj_params.ProjParams.new = function(defData) {
    this[map] = new (IdentityMapOfStringL$ObjectL()).new();
    this[srsCode] = null;
    this.srsCode = defData;
    let paramObj = new (IdentityMapOfStringL$ObjectL()).new();
    defData[$split]("+")[$map](StringL(), dart.fn(v => v[$trim](), StringLToStringL()))[$where](dart.fn(a => a != null, StringLToboolL()))[$forEach](dart.fn(a => {
      let split = a[$split]("=");
      if (split[$length] === 2) {
        paramObj[$_set](split[$_get](0), split[$_get](1));
      } else if (split[$length] === 1 && split[$_get](0)[$isNotEmpty]) {
        paramObj[$_set](split[$_get](0), true);
      }
    }, StringLToNull()));
    this[_iterateProps](paramObj);
    this[_addExtraProps]();
  }).prototype = proj_params.ProjParams.prototype;
  (proj_params.ProjParams.fromWKT = function(wkt) {
    this[map] = new (IdentityMapOfStringL$ObjectL()).new();
    this[srsCode] = null;
    this[_iterateProps](wkt.map[$cast](StringL(), ObjectL()));
    this[_addExtraProps]();
  }).prototype = proj_params.ProjParams.prototype;
  dart.addTypeTests(proj_params.ProjParams);
  dart.addTypeCaches(proj_params.ProjParams);
  dart.setMethodSignature(proj_params.ProjParams, () => ({
    __proto__: dart.getMethods(proj_params.ProjParams.__proto__),
    [_iterateProps]: dart.fnType(dart.void, [dart.legacy(core.Map$(dart.legacy(core.String), dart.legacy(core.Object)))]),
    [_addExtraProps]: dart.fnType(dart.void, []),
    [_getDatumParamsFromString]: dart.fnType(dart.legacy(core.List$(dart.legacy(core.double))), [dart.legacy(core.String)]),
    [_parseDatumParams]: dart.fnType(dart.legacy(core.List$(dart.legacy(core.double))), [dart.legacy(core.List$(dart.legacy(core.Object)))])
  }));
  dart.setGetterSignature(proj_params.ProjParams, () => ({
    __proto__: dart.getGetters(proj_params.ProjParams.__proto__),
    title: dart.legacy(core.String),
    datumCode: dart.legacy(core.String),
    proj: dart.legacy(core.String),
    rf: dart.legacy(core.double),
    lat0: dart.legacy(core.double),
    lat1: dart.legacy(core.double),
    lat2: dart.legacy(core.double),
    lat_ts: dart.legacy(core.double),
    long0: dart.legacy(core.double),
    long1: dart.legacy(core.double),
    long2: dart.legacy(core.double),
    alpha: dart.legacy(core.double),
    longc: dart.legacy(core.double),
    x0: dart.legacy(core.double),
    y0: dart.legacy(core.double),
    k0: dart.legacy(core.double),
    k: dart.legacy(core.double),
    a: dart.legacy(core.double),
    b: dart.legacy(core.double),
    R_A: dart.legacy(core.bool),
    zone: dart.legacy(core.int),
    utmSouth: dart.legacy(core.bool),
    datum_params: dart.legacy(core.List$(dart.legacy(core.double))),
    to_meter: dart.legacy(core.double),
    units: dart.legacy(core.String),
    from_greenwich: dart.legacy(core.double),
    nadgrids: dart.legacy(core.String),
    axis: dart.legacy(core.String),
    no_defs: dart.legacy(core.bool),
    ellps: dart.legacy(core.String),
    datumName: dart.legacy(core.String),
    sphere: dart.legacy(core.bool),
    es: dart.legacy(core.double),
    e: dart.legacy(core.double),
    ep2: dart.legacy(core.double),
    datum: dart.legacy(datum.Datum)
  }));
  dart.setLibraryUri(proj_params.ProjParams, L0);
  dart.setFieldSignature(proj_params.ProjParams, () => ({
    __proto__: dart.getFields(proj_params.ProjParams.__proto__),
    map: dart.fieldType(dart.legacy(core.Map$(dart.legacy(core.String), dart.legacy(core.Object)))),
    srsCode: dart.fieldType(dart.legacy(core.String))
  }));
  dart.trackLibraries("packages/proj4dart/src/classes/proj_params.dart", {
    "package:proj4dart/src/classes/proj_params.dart": proj_params
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["proj_params.dart"],"names":[],"mappings":"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","file":"../../../../../../../../../packages/proj4dart/src/classes/proj_params.dart.lib.js"}');
  // Exports:
  return {
    src__classes__proj_params: proj_params
  };
}));

//# sourceMappingURL=proj_params.dart.lib.js.map
