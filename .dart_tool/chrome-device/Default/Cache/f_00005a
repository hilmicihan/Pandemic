define(['dart_sdk', 'packages/flutter/src/services/system_channels.dart', 'packages/flutter/src/foundation/change_notifier.dart', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter/src/widgets/texture.dart', 'packages/flutter/src/rendering/layer.dart', 'packages/flutter/src/rendering/proxy_box.dart', 'packages/flutter/src/gestures/drag_details.dart', 'packages/flutter/src/gestures/tap.dart', 'packages/flutter/src/painting/edge_insets.dart', 'packages/flutter/src/rendering/stack.dart', 'packages/flutter/src/material/progress_indicator.dart', 'packages/flutter/src/animation/listener_helpers.dart', 'packages/flutter/src/material/colors.dart'], (function load__packages__cached_video_player__cached_video_player_dart(dart_sdk, packages__flutter__src__services__system_channels$46dart, packages__flutter__src__foundation__change_notifier$46dart, packages__flutter__src__widgets__widget_span$46dart, packages__flutter__src__widgets__texture$46dart, packages__flutter__src__rendering__layer$46dart, packages__flutter__src__rendering__proxy_box$46dart, packages__flutter__src__gestures__drag_details$46dart, packages__flutter__src__gestures__tap$46dart, packages__flutter__src__painting__edge_insets$46dart, packages__flutter__src__rendering__stack$46dart, packages__flutter__src__material__progress_indicator$46dart, packages__flutter__src__animation__listener_helpers$46dart, packages__flutter__src__material__colors$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const async = dart_sdk.async;
  const _js_helper = dart_sdk._js_helper;
  const _interceptors = dart_sdk._interceptors;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const message_codec = packages__flutter__src__services__system_channels$46dart.src__services__message_codec;
  const platform_channel = packages__flutter__src__services__system_channels$46dart.src__services__platform_channel;
  const message_codecs = packages__flutter__src__services__system_channels$46dart.src__services__message_codecs;
  const change_notifier = packages__flutter__src__foundation__change_notifier$46dart.src__foundation__change_notifier;
  const binding = packages__flutter__src__widgets__widget_span$46dart.src__widgets__binding;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const container = packages__flutter__src__widgets__widget_span$46dart.src__widgets__container;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const gesture_detector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__gesture_detector;
  const basic = packages__flutter__src__widgets__widget_span$46dart.src__widgets__basic;
  const texture = packages__flutter__src__widgets__texture$46dart.src__widgets__texture;
  const box = packages__flutter__src__rendering__layer$46dart.src__rendering__box;
  const proxy_box = packages__flutter__src__rendering__proxy_box$46dart.src__rendering__proxy_box;
  const drag_details = packages__flutter__src__gestures__drag_details$46dart.src__gestures__drag_details;
  const tap = packages__flutter__src__gestures__tap$46dart.src__gestures__tap;
  const edge_insets = packages__flutter__src__painting__edge_insets$46dart.src__painting__edge_insets;
  const stack = packages__flutter__src__rendering__stack$46dart.src__rendering__stack;
  const progress_indicator = packages__flutter__src__material__progress_indicator$46dart.src__material__progress_indicator;
  const animations = packages__flutter__src__animation__listener_helpers$46dart.src__animation__animations;
  const colors = packages__flutter__src__material__colors$46dart.src__material__colors;
  var cached_video_player = Object.create(dart.library);
  var $toString = dartx.toString;
  var $join = dartx.join;
  var $_get = dartx._get;
  var $map = dartx.map;
  var $toList = dartx.toList;
  var $clamp = dartx.clamp;
  var DurationRangeL = () => (DurationRangeL = dart.constFn(dart.legacy(cached_video_player.DurationRange)))();
  var DataSourceTypeL = () => (DataSourceTypeL = dart.constFn(dart.legacy(cached_video_player.DataSourceType)))();
  var CompleterOfvoid = () => (CompleterOfvoid = dart.constFn(async.Completer$(dart.void)))();
  var StringL = () => (StringL = dart.constFn(dart.legacy(core.String)))();
  var IdentityMapOfStringL$dynamic = () => (IdentityMapOfStringL$dynamic = dart.constFn(_js_helper.IdentityMap$(StringL(), dart.dynamic)))();
  var intL = () => (intL = dart.constFn(dart.legacy(core.int)))();
  var ListL = () => (ListL = dart.constFn(dart.legacy(core.List)))();
  var dynamicToDurationRangeL = () => (dynamicToDurationRangeL = dart.constFn(dart.fnType(DurationRangeL(), [dart.dynamic])))();
  var MapL = () => (MapL = dart.constFn(dart.legacy(core.Map)))();
  var dynamicTovoid = () => (dynamicTovoid = dart.constFn(dart.fnType(dart.void, [dart.dynamic])))();
  var PlatformExceptionL = () => (PlatformExceptionL = dart.constFn(dart.legacy(message_codec.PlatformException)))();
  var ObjectL = () => (ObjectL = dart.constFn(dart.legacy(core.Object)))();
  var ObjectLTovoid = () => (ObjectLTovoid = dart.constFn(dart.fnType(dart.void, [ObjectL()])))();
  var FutureOfNull = () => (FutureOfNull = dart.constFn(async.Future$(core.Null)))();
  var FutureLOfNull = () => (FutureLOfNull = dart.constFn(dart.legacy(FutureOfNull())))();
  var TimerL = () => (TimerL = dart.constFn(dart.legacy(async.Timer)))();
  var TimerLToFutureLOfNull = () => (TimerLToFutureLOfNull = dart.constFn(dart.fnType(FutureLOfNull(), [TimerL()])))();
  var DurationL = () => (DurationL = dart.constFn(dart.legacy(core.Duration)))();
  var VoidToNull = () => (VoidToNull = dart.constFn(dart.fnType(core.Null, [])))();
  var CachedVideoPlayerL = () => (CachedVideoPlayerL = dart.constFn(dart.legacy(cached_video_player.CachedVideoPlayer)))();
  var _LocationL = () => (_LocationL = dart.constFn(dart.legacy(widget_inspector._Location)))();
  var RenderBoxL = () => (RenderBoxL = dart.constFn(dart.legacy(box.RenderBox)))();
  var OffsetL = () => (OffsetL = dart.constFn(dart.legacy(ui.Offset)))();
  var OffsetLTovoid = () => (OffsetLTovoid = dart.constFn(dart.fnType(dart.void, [OffsetL()])))();
  var DragStartDetailsL = () => (DragStartDetailsL = dart.constFn(dart.legacy(drag_details.DragStartDetails)))();
  var DragStartDetailsLToNull = () => (DragStartDetailsLToNull = dart.constFn(dart.fnType(core.Null, [DragStartDetailsL()])))();
  var DragUpdateDetailsL = () => (DragUpdateDetailsL = dart.constFn(dart.legacy(drag_details.DragUpdateDetails)))();
  var DragUpdateDetailsLToNull = () => (DragUpdateDetailsLToNull = dart.constFn(dart.fnType(core.Null, [DragUpdateDetailsL()])))();
  var DragEndDetailsL = () => (DragEndDetailsL = dart.constFn(dart.legacy(drag_details.DragEndDetails)))();
  var DragEndDetailsLToNull = () => (DragEndDetailsLToNull = dart.constFn(dart.fnType(core.Null, [DragEndDetailsL()])))();
  var TapDownDetailsL = () => (TapDownDetailsL = dart.constFn(dart.legacy(tap.TapDownDetails)))();
  var TapDownDetailsLToNull = () => (TapDownDetailsLToNull = dart.constFn(dart.fnType(core.Null, [TapDownDetailsL()])))();
  var ColorL = () => (ColorL = dart.constFn(dart.legacy(ui.Color)))();
  var AlwaysStoppedAnimationOfColorL = () => (AlwaysStoppedAnimationOfColorL = dart.constFn(animations.AlwaysStoppedAnimation$(ColorL())))();
  var WidgetL = () => (WidgetL = dart.constFn(dart.legacy(framework.Widget)))();
  var JSArrayOfWidgetL = () => (JSArrayOfWidgetL = dart.constFn(_interceptors.JSArray$(WidgetL())))();
  const CT = Object.create(null);
  var L0 = "package:cached_video_player/cached_video_player.dart";
  dart.defineLazy(CT, {
    get C0() {
      return C0 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 0
      });
    },
    get C1() {
      return C1 = dart.constList([], DurationRangeL());
    },
    get C2() {
      return C2 = dart.const({
        __proto__: cached_video_player.DataSourceType.prototype,
        [_name$]: "DataSourceType.asset",
        index: 0
      });
    },
    get C3() {
      return C3 = dart.const({
        __proto__: cached_video_player.DataSourceType.prototype,
        [_name$]: "DataSourceType.network",
        index: 1
      });
    },
    get C4() {
      return C4 = dart.const({
        __proto__: cached_video_player.DataSourceType.prototype,
        [_name$]: "DataSourceType.file",
        index: 2
      });
    },
    get C5() {
      return C5 = dart.constList([C2 || CT.C2, C3 || CT.C3, C4 || CT.C4], DataSourceTypeL());
    },
    get C6() {
      return C6 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 500000
      });
    },
    get C7() {
      return C7 = dart.const({
        __proto__: ui.AppLifecycleState.prototype,
        [_name]: "AppLifecycleState.paused",
        index: 2
      });
    },
    get C8() {
      return C8 = dart.const({
        __proto__: ui.AppLifecycleState.prototype,
        [_name]: "AppLifecycleState.resumed",
        index: 0
      });
    },
    get C10() {
      return C10 = dart.constList([], _LocationL());
    },
    get C9() {
      return C9 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C10 || CT.C10,
        [_Location_name]: null,
        [_Location_column]: 33,
        [_Location_line]: 480,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/cached_video_player-1.0.3/lib/cached_video_player.dart"
      });
    },
    get C13() {
      return C13 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textureId",
        [_Location_column]: 55,
        [_Location_line]: 480,
        [_Location_file]: null
      });
    },
    get C12() {
      return C12 = dart.constList([C13 || CT.C13], _LocationL());
    },
    get C11() {
      return C11 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C12 || CT.C12,
        [_Location_name]: null,
        [_Location_column]: 47,
        [_Location_line]: 480,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/cached_video_player-1.0.3/lib/cached_video_player.dart"
      });
    },
    get C14() {
      return C14 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 3003056128.0
      });
    },
    get C15() {
      return C15 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 858927816
      });
    },
    get C16() {
      return C16 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 2143865032
      });
    },
    get C19() {
      return C19 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 7,
        [_Location_line]: 525,
        [_Location_file]: null
      });
    },
    get C20() {
      return C20 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 526,
        [_Location_file]: null
      });
    },
    get C21() {
      return C21 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHorizontalDragStart",
        [_Location_column]: 7,
        [_Location_line]: 527,
        [_Location_file]: null
      });
    },
    get C22() {
      return C22 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHorizontalDragUpdate",
        [_Location_column]: 7,
        [_Location_line]: 536,
        [_Location_file]: null
      });
    },
    get C23() {
      return C23 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHorizontalDragEnd",
        [_Location_column]: 7,
        [_Location_line]: 542,
        [_Location_file]: null
      });
    },
    get C24() {
      return C24 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTapDown",
        [_Location_column]: 7,
        [_Location_line]: 547,
        [_Location_file]: null
      });
    },
    get C18() {
      return C18 = dart.constList([C19 || CT.C19, C20 || CT.C20, C21 || CT.C21, C22 || CT.C22, C23 || CT.C23, C24 || CT.C24], _LocationL());
    },
    get C17() {
      return C17 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C18 || CT.C18,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 524,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/cached_video_player-1.0.3/lib/cached_video_player.dart"
      });
    },
    get C25() {
      return C25 = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 5,
        [EdgeInsets_left]: 0
      });
    },
    get C28() {
      return C28 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "value",
        [_Location_column]: 13,
        [_Location_line]: 628,
        [_Location_file]: null
      });
    },
    get C29() {
      return C29 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "valueColor",
        [_Location_column]: 13,
        [_Location_line]: 629,
        [_Location_file]: null
      });
    },
    get C30() {
      return C30 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 13,
        [_Location_line]: 630,
        [_Location_file]: null
      });
    },
    get C27() {
      return C27 = dart.constList([C28 || CT.C28, C29 || CT.C29, C30 || CT.C30], _LocationL());
    },
    get C26() {
      return C26 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C27 || CT.C27,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 627,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/cached_video_player-1.0.3/lib/cached_video_player.dart"
      });
    },
    get C33() {
      return C33 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "value",
        [_Location_column]: 13,
        [_Location_line]: 633,
        [_Location_file]: null
      });
    },
    get C34() {
      return C34 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "valueColor",
        [_Location_column]: 13,
        [_Location_line]: 634,
        [_Location_file]: null
      });
    },
    get C35() {
      return C35 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 13,
        [_Location_line]: 635,
        [_Location_file]: null
      });
    },
    get C32() {
      return C32 = dart.constList([C33 || CT.C33, C34 || CT.C34, C35 || CT.C35], _LocationL());
    },
    get C31() {
      return C31 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C32 || CT.C32,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 632,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/cached_video_player-1.0.3/lib/cached_video_player.dart"
      });
    },
    get C38() {
      return C38 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "fit",
        [_Location_column]: 9,
        [_Location_line]: 625,
        [_Location_file]: null
      });
    },
    get C39() {
      return C39 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 9,
        [_Location_line]: 626,
        [_Location_file]: null
      });
    },
    get C37() {
      return C37 = dart.constList([C38 || CT.C38, C39 || CT.C39], _LocationL());
    },
    get C36() {
      return C36 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C37 || CT.C37,
        [_Location_name]: null,
        [_Location_column]: 27,
        [_Location_line]: 624,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/cached_video_player-1.0.3/lib/cached_video_player.dart"
      });
    },
    get C42() {
      return C42 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "value",
        [_Location_column]: 9,
        [_Location_line]: 641,
        [_Location_file]: null
      });
    },
    get C43() {
      return C43 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "valueColor",
        [_Location_column]: 9,
        [_Location_line]: 642,
        [_Location_file]: null
      });
    },
    get C44() {
      return C44 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 9,
        [_Location_line]: 643,
        [_Location_file]: null
      });
    },
    get C41() {
      return C41 = dart.constList([C42 || CT.C42, C43 || CT.C43, C44 || CT.C44], _LocationL());
    },
    get C40() {
      return C40 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C41 || CT.C41,
        [_Location_name]: null,
        [_Location_column]: 27,
        [_Location_line]: 640,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/cached_video_player-1.0.3/lib/cached_video_player.dart"
      });
    },
    get C47() {
      return C47 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 7,
        [_Location_line]: 647,
        [_Location_file]: null
      });
    },
    get C48() {
      return C48 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 648,
        [_Location_file]: null
      });
    },
    get C46() {
      return C46 = dart.constList([C47 || CT.C47, C48 || CT.C48], _LocationL());
    },
    get C45() {
      return C45 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C46 || CT.C46,
        [_Location_name]: null,
        [_Location_column]: 44,
        [_Location_line]: 646,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/cached_video_player-1.0.3/lib/cached_video_player.dart"
      });
    },
    get C51() {
      return C51 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 652,
        [_Location_file]: null
      });
    },
    get C52() {
      return C52 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "controller",
        [_Location_column]: 9,
        [_Location_line]: 653,
        [_Location_file]: null
      });
    },
    get C50() {
      return C50 = dart.constList([C51 || CT.C51, C52 || CT.C52], _LocationL());
    },
    get C49() {
      return C49 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C50 || CT.C50,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 651,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/cached_video_player-1.0.3/lib/cached_video_player.dart"
      });
    },
    get C55() {
      return C55 = dart.const({
        __proto__: message_codecs.StandardMessageCodec.prototype
      });
    },
    get C54() {
      return C54 = dart.const({
        __proto__: message_codecs.StandardMethodCodec.prototype,
        [StandardMethodCodec_messageCodec]: C55 || CT.C55
      });
    },
    get C53() {
      return C53 = dart.const({
        __proto__: platform_channel.MethodChannel.prototype,
        [MethodChannel__binaryMessenger]: null,
        [MethodChannel_codec]: C54 || CT.C54,
        [MethodChannel_name]: "flutter_cached_video_player"
      });
    }
  }, false);
  var start$ = dart.privateName(cached_video_player, "DurationRange.start");
  var end$ = dart.privateName(cached_video_player, "DurationRange.end");
  cached_video_player.DurationRange = class DurationRange extends core.Object {
    get start() {
      return this[start$];
    }
    set start(value) {
      super.start = value;
    }
    get end() {
      return this[end$];
    }
    set end(value) {
      super.end = value;
    }
    startFraction(duration) {
      return dart.notNull(this.start.inMilliseconds) / dart.notNull(duration.inMilliseconds);
    }
    endFraction(duration) {
      return dart.notNull(this.end.inMilliseconds) / dart.notNull(duration.inMilliseconds);
    }
    toString() {
      return dart.str(this.runtimeType) + "(start: " + dart.str(this.start) + ", end: " + dart.str(this.end) + ")";
    }
  };
  (cached_video_player.DurationRange.new = function(start, end) {
    this[start$] = start;
    this[end$] = end;
    ;
  }).prototype = cached_video_player.DurationRange.prototype;
  dart.addTypeTests(cached_video_player.DurationRange);
  dart.addTypeCaches(cached_video_player.DurationRange);
  dart.setMethodSignature(cached_video_player.DurationRange, () => ({
    __proto__: dart.getMethods(cached_video_player.DurationRange.__proto__),
    startFraction: dart.fnType(dart.legacy(core.double), [dart.legacy(core.Duration)]),
    endFraction: dart.fnType(dart.legacy(core.double), [dart.legacy(core.Duration)]),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(cached_video_player.DurationRange, L0);
  dart.setFieldSignature(cached_video_player.DurationRange, () => ({
    __proto__: dart.getFields(cached_video_player.DurationRange.__proto__),
    start: dart.finalFieldType(dart.legacy(core.Duration)),
    end: dart.finalFieldType(dart.legacy(core.Duration))
  }));
  dart.defineExtensionMethods(cached_video_player.DurationRange, ['toString']);
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var C0;
  var C1;
  var duration$ = dart.privateName(cached_video_player, "CachedVideoPlayerValue.duration");
  var position$ = dart.privateName(cached_video_player, "CachedVideoPlayerValue.position");
  var buffered$ = dart.privateName(cached_video_player, "CachedVideoPlayerValue.buffered");
  var isPlaying$ = dart.privateName(cached_video_player, "CachedVideoPlayerValue.isPlaying");
  var isLooping$ = dart.privateName(cached_video_player, "CachedVideoPlayerValue.isLooping");
  var isBuffering$ = dart.privateName(cached_video_player, "CachedVideoPlayerValue.isBuffering");
  var volume$ = dart.privateName(cached_video_player, "CachedVideoPlayerValue.volume");
  var errorDescription$ = dart.privateName(cached_video_player, "CachedVideoPlayerValue.errorDescription");
  var size$ = dart.privateName(cached_video_player, "CachedVideoPlayerValue.size");
  cached_video_player.CachedVideoPlayerValue = class CachedVideoPlayerValue extends core.Object {
    get duration() {
      return this[duration$];
    }
    set duration(value) {
      super.duration = value;
    }
    get position() {
      return this[position$];
    }
    set position(value) {
      super.position = value;
    }
    get buffered() {
      return this[buffered$];
    }
    set buffered(value) {
      super.buffered = value;
    }
    get isPlaying() {
      return this[isPlaying$];
    }
    set isPlaying(value) {
      super.isPlaying = value;
    }
    get isLooping() {
      return this[isLooping$];
    }
    set isLooping(value) {
      super.isLooping = value;
    }
    get isBuffering() {
      return this[isBuffering$];
    }
    set isBuffering(value) {
      super.isBuffering = value;
    }
    get volume() {
      return this[volume$];
    }
    set volume(value) {
      super.volume = value;
    }
    get errorDescription() {
      return this[errorDescription$];
    }
    set errorDescription(value) {
      super.errorDescription = value;
    }
    get size() {
      return this[size$];
    }
    set size(value) {
      super.size = value;
    }
    get initialized() {
      return this.duration != null;
    }
    get hasError() {
      return this.errorDescription != null;
    }
    get aspectRatio() {
      return this.size != null ? dart.notNull(this.size.width) / dart.notNull(this.size.height) : 1.0;
    }
    copyWith(opts) {
      let t0, t0$, t0$0, t0$1, t0$2, t0$3, t0$4, t0$5, t0$6;
      let duration = opts && 'duration' in opts ? opts.duration : null;
      let size = opts && 'size' in opts ? opts.size : null;
      let position = opts && 'position' in opts ? opts.position : null;
      let buffered = opts && 'buffered' in opts ? opts.buffered : null;
      let isPlaying = opts && 'isPlaying' in opts ? opts.isPlaying : null;
      let isLooping = opts && 'isLooping' in opts ? opts.isLooping : null;
      let isBuffering = opts && 'isBuffering' in opts ? opts.isBuffering : null;
      let volume = opts && 'volume' in opts ? opts.volume : null;
      let errorDescription = opts && 'errorDescription' in opts ? opts.errorDescription : null;
      return new cached_video_player.CachedVideoPlayerValue.new({duration: (t0 = duration, t0 == null ? this.duration : t0), size: (t0$ = size, t0$ == null ? this.size : t0$), position: (t0$0 = position, t0$0 == null ? this.position : t0$0), buffered: (t0$1 = buffered, t0$1 == null ? this.buffered : t0$1), isPlaying: (t0$2 = isPlaying, t0$2 == null ? this.isPlaying : t0$2), isLooping: (t0$3 = isLooping, t0$3 == null ? this.isLooping : t0$3), isBuffering: (t0$4 = isBuffering, t0$4 == null ? this.isBuffering : t0$4), volume: (t0$5 = volume, t0$5 == null ? this.volume : t0$5), errorDescription: (t0$6 = errorDescription, t0$6 == null ? this.errorDescription : t0$6)});
    }
    toString() {
      return dart.str(this.runtimeType) + "(" + "duration: " + dart.str(this.duration) + ", " + "size: " + dart.str(this.size) + ", " + "position: " + dart.str(this.position) + ", " + "buffered: [" + dart.str(this.buffered[$join](", ")) + "], " + "isPlaying: " + dart.str(this.isPlaying) + ", " + "isLooping: " + dart.str(this.isLooping) + ", " + "isBuffering: " + dart.str(this.isBuffering) + "volume: " + dart.str(this.volume) + ", " + "errorDescription: " + dart.str(this.errorDescription) + ")";
    }
  };
  (cached_video_player.CachedVideoPlayerValue.new = function(opts) {
    let duration = opts && 'duration' in opts ? opts.duration : null;
    let size = opts && 'size' in opts ? opts.size : null;
    let position = opts && 'position' in opts ? opts.position : C0 || CT.C0;
    let buffered = opts && 'buffered' in opts ? opts.buffered : C1 || CT.C1;
    let isPlaying = opts && 'isPlaying' in opts ? opts.isPlaying : false;
    let isLooping = opts && 'isLooping' in opts ? opts.isLooping : false;
    let isBuffering = opts && 'isBuffering' in opts ? opts.isBuffering : false;
    let volume = opts && 'volume' in opts ? opts.volume : 1;
    let errorDescription = opts && 'errorDescription' in opts ? opts.errorDescription : null;
    this[duration$] = duration;
    this[size$] = size;
    this[position$] = position;
    this[buffered$] = buffered;
    this[isPlaying$] = isPlaying;
    this[isLooping$] = isLooping;
    this[isBuffering$] = isBuffering;
    this[volume$] = volume;
    this[errorDescription$] = errorDescription;
    ;
  }).prototype = cached_video_player.CachedVideoPlayerValue.prototype;
  (cached_video_player.CachedVideoPlayerValue.uninitialized = function() {
    cached_video_player.CachedVideoPlayerValue.new.call(this, {duration: null});
  }).prototype = cached_video_player.CachedVideoPlayerValue.prototype;
  (cached_video_player.CachedVideoPlayerValue.erroneous = function(errorDescription) {
    cached_video_player.CachedVideoPlayerValue.new.call(this, {duration: null, errorDescription: errorDescription});
  }).prototype = cached_video_player.CachedVideoPlayerValue.prototype;
  dart.addTypeTests(cached_video_player.CachedVideoPlayerValue);
  dart.addTypeCaches(cached_video_player.CachedVideoPlayerValue);
  dart.setMethodSignature(cached_video_player.CachedVideoPlayerValue, () => ({
    __proto__: dart.getMethods(cached_video_player.CachedVideoPlayerValue.__proto__),
    copyWith: dart.fnType(dart.legacy(cached_video_player.CachedVideoPlayerValue), [], {buffered: dart.legacy(core.List$(dart.legacy(cached_video_player.DurationRange))), duration: dart.legacy(core.Duration), errorDescription: dart.legacy(core.String), isBuffering: dart.legacy(core.bool), isLooping: dart.legacy(core.bool), isPlaying: dart.legacy(core.bool), position: dart.legacy(core.Duration), size: dart.legacy(ui.Size), volume: dart.legacy(core.double)}, {}),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setGetterSignature(cached_video_player.CachedVideoPlayerValue, () => ({
    __proto__: dart.getGetters(cached_video_player.CachedVideoPlayerValue.__proto__),
    initialized: dart.legacy(core.bool),
    hasError: dart.legacy(core.bool),
    aspectRatio: dart.legacy(core.double)
  }));
  dart.setLibraryUri(cached_video_player.CachedVideoPlayerValue, L0);
  dart.setFieldSignature(cached_video_player.CachedVideoPlayerValue, () => ({
    __proto__: dart.getFields(cached_video_player.CachedVideoPlayerValue.__proto__),
    duration: dart.finalFieldType(dart.legacy(core.Duration)),
    position: dart.finalFieldType(dart.legacy(core.Duration)),
    buffered: dart.finalFieldType(dart.legacy(core.List$(dart.legacy(cached_video_player.DurationRange)))),
    isPlaying: dart.finalFieldType(dart.legacy(core.bool)),
    isLooping: dart.finalFieldType(dart.legacy(core.bool)),
    isBuffering: dart.finalFieldType(dart.legacy(core.bool)),
    volume: dart.finalFieldType(dart.legacy(core.double)),
    errorDescription: dart.finalFieldType(dart.legacy(core.String)),
    size: dart.finalFieldType(dart.legacy(ui.Size))
  }));
  dart.defineExtensionMethods(cached_video_player.CachedVideoPlayerValue, ['toString']);
  var _name$ = dart.privateName(cached_video_player, "_name");
  var C2;
  var C3;
  var C4;
  var C5;
  cached_video_player.DataSourceType = class DataSourceType extends core.Object {
    toString() {
      return this[_name$];
    }
  };
  (cached_video_player.DataSourceType.new = function(index, _name) {
    this.index = index;
    this[_name$] = _name;
    ;
  }).prototype = cached_video_player.DataSourceType.prototype;
  dart.addTypeTests(cached_video_player.DataSourceType);
  dart.addTypeCaches(cached_video_player.DataSourceType);
  dart.setMethodSignature(cached_video_player.DataSourceType, () => ({
    __proto__: dart.getMethods(cached_video_player.DataSourceType.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(cached_video_player.DataSourceType, L0);
  dart.setFieldSignature(cached_video_player.DataSourceType, () => ({
    __proto__: dart.getFields(cached_video_player.DataSourceType.__proto__),
    index: dart.finalFieldType(dart.legacy(core.int)),
    [_name$]: dart.finalFieldType(dart.legacy(core.String))
  }));
  dart.defineExtensionMethods(cached_video_player.DataSourceType, ['toString']);
  cached_video_player.DataSourceType.asset = C2 || CT.C2;
  cached_video_player.DataSourceType.network = C3 || CT.C3;
  cached_video_player.DataSourceType.file = C4 || CT.C4;
  cached_video_player.DataSourceType.values = C5 || CT.C5;
  var _textureId = dart.privateName(cached_video_player, "_textureId");
  var _timer = dart.privateName(cached_video_player, "_timer");
  var _isDisposed = dart.privateName(cached_video_player, "_isDisposed");
  var _creatingCompleter = dart.privateName(cached_video_player, "_creatingCompleter");
  var _eventSubscription = dart.privateName(cached_video_player, "_eventSubscription");
  var _lifeCycleObserver = dart.privateName(cached_video_player, "_lifeCycleObserver");
  var _applyLooping = dart.privateName(cached_video_player, "_applyLooping");
  var _applyVolume = dart.privateName(cached_video_player, "_applyVolume");
  var _applyPlayPause = dart.privateName(cached_video_player, "_applyPlayPause");
  var _eventChannelFor = dart.privateName(cached_video_player, "_eventChannelFor");
  var C6;
  var dataSource$ = dart.privateName(cached_video_player, "CachedVideoPlayerController.dataSource");
  var dataSourceType = dart.privateName(cached_video_player, "CachedVideoPlayerController.dataSourceType");
  var package$ = dart.privateName(cached_video_player, "CachedVideoPlayerController.package");
  const dispose = Symbol("dispose");
  cached_video_player.CachedVideoPlayerController = class CachedVideoPlayerController extends change_notifier.ValueNotifier$(dart.legacy(cached_video_player.CachedVideoPlayerValue)) {
    get dataSource() {
      return this[dataSource$];
    }
    set dataSource(value) {
      super.dataSource = value;
    }
    get dataSourceType() {
      return this[dataSourceType];
    }
    set dataSourceType(value) {
      super.dataSourceType = value;
    }
    get package() {
      return this[package$];
    }
    set package(value) {
      super.package = value;
    }
    get textureId() {
      return this[_textureId];
    }
    initialize() {
      return async.async(dart.void, (function* initialize() {
        this[_lifeCycleObserver] = new cached_video_player._VideoAppLifeCycleObserver.new(this);
        this[_lifeCycleObserver].initialize();
        this[_creatingCompleter] = CompleterOfvoid().new();
        let dataSourceDescription = null;
        switch (this.dataSourceType) {
          case C2 || CT.C2:
          {
            dataSourceDescription = new (IdentityMapOfStringL$dynamic()).from(["asset", this.dataSource, "package", this.package]);
            break;
          }
          case C3 || CT.C3:
          {
            dataSourceDescription = new (IdentityMapOfStringL$dynamic()).from(["uri", this.dataSource]);
            break;
          }
          case C4 || CT.C4:
          {
            dataSourceDescription = new (IdentityMapOfStringL$dynamic()).from(["uri", this.dataSource]);
          }
        }
        let response = (yield cached_video_player._channel.invokeMapMethod(StringL(), dart.dynamic, "create", dataSourceDescription));
        this[_textureId] = intL().as(response[$_get]("textureId"));
        this[_creatingCompleter].complete(null);
        let initializingCompleter = CompleterOfvoid().new();
        function toDurationRange(value) {
          let pair = ListL().as(value);
          return new cached_video_player.DurationRange.new(new core.Duration.new({milliseconds: core.int.as(pair[$_get](0))}), new core.Duration.new({milliseconds: core.int.as(pair[$_get](1))}));
        }
        dart.fn(toDurationRange, dynamicToDurationRangeL());
        const eventListener = event => {
          let t0, t0$, t0$0, t0$1, t0$2;
          let map = MapL().as(event);
          switch (map[$_get]("event")) {
            case "initialized":
            {
              this.value = this.value.copyWith({duration: new core.Duration.new({milliseconds: core.int.as(map[$_get]("duration"))}), size: new ui.Size.new(core.double.as((t0$ = (t0 = map[$_get]("width"), t0 == null ? null : dart.dsend(t0, 'toDouble', [])), t0$ == null ? 0.0 : t0$)), core.double.as((t0$1 = (t0$0 = map[$_get]("height"), t0$0 == null ? null : dart.dsend(t0$0, 'toDouble', [])), t0$1 == null ? 0.0 : t0$1)))});
              initializingCompleter.complete(null);
              this[_applyLooping]();
              this[_applyVolume]();
              this[_applyPlayPause]();
              break;
            }
            case "completed":
            {
              this.value = this.value.copyWith({isPlaying: false, position: this.value.duration});
              t0$2 = this[_timer];
              t0$2 == null ? null : t0$2.cancel();
              break;
            }
            case "bufferingUpdate":
            {
              let values = ListL().as(map[$_get]("values"));
              this.value = this.value.copyWith({buffered: values[$map](DurationRangeL(), toDurationRange)[$toList]()});
              break;
            }
            case "bufferingStart":
            {
              this.value = this.value.copyWith({isBuffering: true});
              break;
            }
            case "bufferingEnd":
            {
              this.value = this.value.copyWith({isBuffering: false});
              break;
            }
          }
        };
        dart.fn(eventListener, dynamicTovoid());
        const errorListener = obj => {
          let t0;
          let e = PlatformExceptionL().as(obj);
          this.value = new cached_video_player.CachedVideoPlayerValue.erroneous(e.message);
          t0 = this[_timer];
          t0 == null ? null : t0.cancel();
        };
        dart.fn(errorListener, ObjectLTovoid());
        this[_eventSubscription] = this[_eventChannelFor](this[_textureId]).receiveBroadcastStream().listen(eventListener, {onError: errorListener});
        return initializingCompleter.future;
      }).bind(this));
    }
    [_eventChannelFor](textureId) {
      return new platform_channel.EventChannel.new("flutter_cached_video_player/videoEvents" + dart.str(textureId));
    }
    dispose() {
      return async.async(dart.void, (function* dispose$() {
        let t0, t0$;
        if (this[_creatingCompleter] != null) {
          yield this[_creatingCompleter].future;
          if (!dart.test(this[_isDisposed])) {
            this[_isDisposed] = true;
            t0 = this[_timer];
            t0 == null ? null : t0.cancel();
            yield (t0$ = this[_eventSubscription], t0$ == null ? null : t0$.cancel());
            yield cached_video_player._channel.invokeMethod(dart.void, "dispose", new (IdentityMapOfStringL$dynamic()).from(["textureId", this[_textureId]]));
          }
          this[_lifeCycleObserver].dispose();
        }
        this[_isDisposed] = true;
        this[dispose]();
      }).bind(this));
    }
    play() {
      return async.async(dart.void, (function* play() {
        this.value = this.value.copyWith({isPlaying: true});
        yield this[_applyPlayPause]();
      }).bind(this));
    }
    setLooping(looping) {
      return async.async(dart.void, (function* setLooping() {
        this.value = this.value.copyWith({isLooping: looping});
        yield this[_applyLooping]();
      }).bind(this));
    }
    pause() {
      return async.async(dart.void, (function* pause() {
        this.value = this.value.copyWith({isPlaying: false});
        yield this[_applyPlayPause]();
      }).bind(this));
    }
    [_applyLooping]() {
      return async.async(dart.void, (function* _applyLooping() {
        if (!dart.test(this.value.initialized) || dart.test(this[_isDisposed])) {
          return;
        }
        cached_video_player._channel.invokeMethod(dart.void, "setLooping", new (IdentityMapOfStringL$dynamic()).from(["textureId", this[_textureId], "looping", this.value.isLooping]));
      }).bind(this));
    }
    [_applyPlayPause]() {
      return async.async(dart.void, (function* _applyPlayPause() {
        let t0;
        if (!dart.test(this.value.initialized) || dart.test(this[_isDisposed])) {
          return;
        }
        if (dart.test(this.value.isPlaying)) {
          yield cached_video_player._channel.invokeMethod(dart.void, "play", new (IdentityMapOfStringL$dynamic()).from(["textureId", this[_textureId]]));
          this[_timer] = async.Timer.periodic(C6 || CT.C6, dart.fn(timer => async.async(core.Null, (function*() {
            if (dart.test(this[_isDisposed])) {
              return;
            }
            let newPosition = (yield this.position);
            if (dart.test(this[_isDisposed])) {
              return;
            }
            this.value = this.value.copyWith({position: newPosition});
          }).bind(this)), TimerLToFutureLOfNull()));
        } else {
          t0 = this[_timer];
          t0 == null ? null : t0.cancel();
          yield cached_video_player._channel.invokeMethod(dart.void, "pause", new (IdentityMapOfStringL$dynamic()).from(["textureId", this[_textureId]]));
        }
      }).bind(this));
    }
    [_applyVolume]() {
      return async.async(dart.void, (function* _applyVolume() {
        if (!dart.test(this.value.initialized) || dart.test(this[_isDisposed])) {
          return;
        }
        yield cached_video_player._channel.invokeMethod(dart.void, "setVolume", new (IdentityMapOfStringL$dynamic()).from(["textureId", this[_textureId], "volume", this.value.volume]));
      }).bind(this));
    }
    get position() {
      return async.async(DurationL(), (function* position() {
        if (dart.test(this[_isDisposed])) {
          return null;
        }
        return new core.Duration.new({milliseconds: (yield cached_video_player._channel.invokeMethod(intL(), "position", new (IdentityMapOfStringL$dynamic()).from(["textureId", this[_textureId]])))});
      }).bind(this));
    }
    seekTo(moment) {
      return async.async(dart.void, (function* seekTo() {
        if (dart.test(this[_isDisposed])) {
          return;
        }
        if (dart.test(moment['>'](this.value.duration))) {
          moment = this.value.duration;
        } else if (dart.test(moment['<'](C0 || CT.C0))) {
          moment = C0 || CT.C0;
        }
        yield cached_video_player._channel.invokeMethod(dart.void, "seekTo", new (IdentityMapOfStringL$dynamic()).from(["textureId", this[_textureId], "location", moment.inMilliseconds]));
        this.value = this.value.copyWith({position: moment});
      }).bind(this));
    }
    setVolume(volume) {
      return async.async(dart.void, (function* setVolume() {
        this.value = this.value.copyWith({volume: volume[$clamp](0.0, 1.0)});
        yield this[_applyVolume]();
      }).bind(this));
    }
    [dispose]() {
      return super.dispose();
    }
  };
  (cached_video_player.CachedVideoPlayerController.asset = function(dataSource, opts) {
    let $package = opts && 'package' in opts ? opts.package : null;
    this[_textureId] = null;
    this[_timer] = null;
    this[_isDisposed] = false;
    this[_creatingCompleter] = null;
    this[_eventSubscription] = null;
    this[_lifeCycleObserver] = null;
    this[dataSource$] = dataSource;
    this[package$] = $package;
    this[dataSourceType] = cached_video_player.DataSourceType.asset;
    cached_video_player.CachedVideoPlayerController.__proto__.new.call(this, new cached_video_player.CachedVideoPlayerValue.new({duration: null}));
    ;
  }).prototype = cached_video_player.CachedVideoPlayerController.prototype;
  (cached_video_player.CachedVideoPlayerController.network = function(dataSource) {
    this[_textureId] = null;
    this[_timer] = null;
    this[_isDisposed] = false;
    this[_creatingCompleter] = null;
    this[_eventSubscription] = null;
    this[_lifeCycleObserver] = null;
    this[dataSource$] = dataSource;
    this[dataSourceType] = cached_video_player.DataSourceType.network;
    this[package$] = null;
    cached_video_player.CachedVideoPlayerController.__proto__.new.call(this, new cached_video_player.CachedVideoPlayerValue.new({duration: null}));
    ;
  }).prototype = cached_video_player.CachedVideoPlayerController.prototype;
  (cached_video_player.CachedVideoPlayerController.file = function(file) {
    this[_textureId] = null;
    this[_timer] = null;
    this[_isDisposed] = false;
    this[_creatingCompleter] = null;
    this[_eventSubscription] = null;
    this[_lifeCycleObserver] = null;
    this[dataSource$] = "file://" + dart.str(file.path);
    this[dataSourceType] = cached_video_player.DataSourceType.file;
    this[package$] = null;
    cached_video_player.CachedVideoPlayerController.__proto__.new.call(this, new cached_video_player.CachedVideoPlayerValue.new({duration: null}));
    ;
  }).prototype = cached_video_player.CachedVideoPlayerController.prototype;
  dart.addTypeTests(cached_video_player.CachedVideoPlayerController);
  dart.addTypeCaches(cached_video_player.CachedVideoPlayerController);
  dart.setMethodSignature(cached_video_player.CachedVideoPlayerController, () => ({
    __proto__: dart.getMethods(cached_video_player.CachedVideoPlayerController.__proto__),
    initialize: dart.fnType(dart.legacy(async.Future$(dart.void)), []),
    [_eventChannelFor]: dart.fnType(dart.legacy(platform_channel.EventChannel), [dart.legacy(core.int)]),
    dispose: dart.fnType(dart.legacy(async.Future$(dart.void)), []),
    play: dart.fnType(dart.legacy(async.Future$(dart.void)), []),
    setLooping: dart.fnType(dart.legacy(async.Future$(dart.void)), [dart.legacy(core.bool)]),
    pause: dart.fnType(dart.legacy(async.Future$(dart.void)), []),
    [_applyLooping]: dart.fnType(dart.legacy(async.Future$(dart.void)), []),
    [_applyPlayPause]: dart.fnType(dart.legacy(async.Future$(dart.void)), []),
    [_applyVolume]: dart.fnType(dart.legacy(async.Future$(dart.void)), []),
    seekTo: dart.fnType(dart.legacy(async.Future$(dart.void)), [dart.legacy(core.Duration)]),
    setVolume: dart.fnType(dart.legacy(async.Future$(dart.void)), [dart.legacy(core.double)])
  }));
  dart.setGetterSignature(cached_video_player.CachedVideoPlayerController, () => ({
    __proto__: dart.getGetters(cached_video_player.CachedVideoPlayerController.__proto__),
    textureId: dart.legacy(core.int),
    position: dart.legacy(async.Future$(dart.legacy(core.Duration)))
  }));
  dart.setLibraryUri(cached_video_player.CachedVideoPlayerController, L0);
  dart.setFieldSignature(cached_video_player.CachedVideoPlayerController, () => ({
    __proto__: dart.getFields(cached_video_player.CachedVideoPlayerController.__proto__),
    [_textureId]: dart.fieldType(dart.legacy(core.int)),
    dataSource: dart.finalFieldType(dart.legacy(core.String)),
    dataSourceType: dart.finalFieldType(dart.legacy(cached_video_player.DataSourceType)),
    package: dart.finalFieldType(dart.legacy(core.String)),
    [_timer]: dart.fieldType(dart.legacy(async.Timer)),
    [_isDisposed]: dart.fieldType(dart.legacy(core.bool)),
    [_creatingCompleter]: dart.fieldType(dart.legacy(async.Completer$(dart.void))),
    [_eventSubscription]: dart.fieldType(dart.legacy(async.StreamSubscription)),
    [_lifeCycleObserver]: dart.fieldType(dart.legacy(cached_video_player._VideoAppLifeCycleObserver))
  }));
  var _wasPlayingBeforePause = dart.privateName(cached_video_player, "_wasPlayingBeforePause");
  var _controller$ = dart.privateName(cached_video_player, "_controller");
  var _name = dart.privateName(ui, "_name");
  var C7;
  var C8;
  const Object_WidgetsBindingObserver$36 = class Object_WidgetsBindingObserver extends core.Object {};
  (Object_WidgetsBindingObserver$36.new = function() {
  }).prototype = Object_WidgetsBindingObserver$36.prototype;
  dart.applyMixin(Object_WidgetsBindingObserver$36, binding.WidgetsBindingObserver);
  cached_video_player._VideoAppLifeCycleObserver = class _VideoAppLifeCycleObserver extends Object_WidgetsBindingObserver$36 {
    initialize() {
      binding.WidgetsBinding.instance.addObserver(this);
    }
    didChangeAppLifecycleState(state) {
      switch (state) {
        case C7 || CT.C7:
        {
          this[_wasPlayingBeforePause] = this[_controller$].value.isPlaying;
          this[_controller$].pause();
          break;
        }
        case C8 || CT.C8:
        {
          if (dart.test(this[_wasPlayingBeforePause])) {
            this[_controller$].play();
          }
          break;
        }
        default:
      }
    }
    dispose() {
      binding.WidgetsBinding.instance.removeObserver(this);
    }
  };
  (cached_video_player._VideoAppLifeCycleObserver.new = function(_controller) {
    this[_wasPlayingBeforePause] = false;
    this[_controller$] = _controller;
    ;
  }).prototype = cached_video_player._VideoAppLifeCycleObserver.prototype;
  dart.addTypeTests(cached_video_player._VideoAppLifeCycleObserver);
  dart.addTypeCaches(cached_video_player._VideoAppLifeCycleObserver);
  dart.setMethodSignature(cached_video_player._VideoAppLifeCycleObserver, () => ({
    __proto__: dart.getMethods(cached_video_player._VideoAppLifeCycleObserver.__proto__),
    initialize: dart.fnType(dart.void, []),
    didChangeAppLifecycleState: dart.fnType(dart.void, [dart.legacy(ui.AppLifecycleState)]),
    dispose: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(cached_video_player._VideoAppLifeCycleObserver, L0);
  dart.setFieldSignature(cached_video_player._VideoAppLifeCycleObserver, () => ({
    __proto__: dart.getFields(cached_video_player._VideoAppLifeCycleObserver.__proto__),
    [_wasPlayingBeforePause]: dart.fieldType(dart.legacy(core.bool)),
    [_controller$]: dart.finalFieldType(dart.legacy(cached_video_player.CachedVideoPlayerController))
  }));
  var controller$ = dart.privateName(cached_video_player, "CachedVideoPlayer.controller");
  cached_video_player.CachedVideoPlayer = class CachedVideoPlayer extends framework.StatefulWidget {
    get controller() {
      return this[controller$];
    }
    set controller(value) {
      super.controller = value;
    }
    createState() {
      return new cached_video_player._CachedVideoPlayerState.new();
    }
  };
  (cached_video_player.CachedVideoPlayer.new = function(controller, opts) {
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[controller$] = controller;
    cached_video_player.CachedVideoPlayer.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = cached_video_player.CachedVideoPlayer.prototype;
  dart.addTypeTests(cached_video_player.CachedVideoPlayer);
  dart.addTypeCaches(cached_video_player.CachedVideoPlayer);
  dart.setMethodSignature(cached_video_player.CachedVideoPlayer, () => ({
    __proto__: dart.getMethods(cached_video_player.CachedVideoPlayer.__proto__),
    createState: dart.fnType(dart.legacy(cached_video_player._CachedVideoPlayerState), [])
  }));
  dart.setLibraryUri(cached_video_player.CachedVideoPlayer, L0);
  dart.setFieldSignature(cached_video_player.CachedVideoPlayer, () => ({
    __proto__: dart.getFields(cached_video_player.CachedVideoPlayer.__proto__),
    controller: dart.finalFieldType(dart.legacy(cached_video_player.CachedVideoPlayerController))
  }));
  var _listener = dart.privateName(cached_video_player, "_listener");
  var C10;
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  var C9;
  var C13;
  var C12;
  var C11;
  cached_video_player._CachedVideoPlayerState = class _CachedVideoPlayerState extends framework.State$(dart.legacy(cached_video_player.CachedVideoPlayer)) {
    initState() {
      super.initState();
      this[_textureId] = this.widget.controller.textureId;
      this.widget.controller.addListener(this[_listener]);
    }
    didUpdateWidget(oldWidget) {
      CachedVideoPlayerL().as(oldWidget);
      super.didUpdateWidget(oldWidget);
      oldWidget.controller.removeListener(this[_listener]);
      this[_textureId] = this.widget.controller.textureId;
      this.widget.controller.addListener(this[_listener]);
    }
    deactivate() {
      super.deactivate();
      this.widget.controller.removeListener(this[_listener]);
    }
    build(context) {
      return this[_textureId] == null ? new container.Container.new({$creationLocationd_0dea112b090073317d4: C9 || CT.C9}) : new texture.Texture.new({textureId: this[_textureId], $creationLocationd_0dea112b090073317d4: C11 || CT.C11});
    }
  };
  (cached_video_player._CachedVideoPlayerState.new = function() {
    this[_listener] = null;
    this[_textureId] = null;
    cached_video_player._CachedVideoPlayerState.__proto__.new.call(this);
    this[_listener] = dart.fn(() => {
      let newTextureId = this.widget.controller.textureId;
      if (newTextureId != this[_textureId]) {
        this.setState(dart.fn(() => {
          this[_textureId] = newTextureId;
        }, VoidToNull()));
      }
    }, VoidToNull());
  }).prototype = cached_video_player._CachedVideoPlayerState.prototype;
  dart.addTypeTests(cached_video_player._CachedVideoPlayerState);
  dart.addTypeCaches(cached_video_player._CachedVideoPlayerState);
  dart.setMethodSignature(cached_video_player._CachedVideoPlayerState, () => ({
    __proto__: dart.getMethods(cached_video_player._CachedVideoPlayerState.__proto__),
    didUpdateWidget: dart.fnType(dart.void, [dart.legacy(core.Object)]),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(cached_video_player._CachedVideoPlayerState, L0);
  dart.setFieldSignature(cached_video_player._CachedVideoPlayerState, () => ({
    __proto__: dart.getFields(cached_video_player._CachedVideoPlayerState.__proto__),
    [_listener]: dart.fieldType(dart.legacy(dart.fnType(dart.void, []))),
    [_textureId]: dart.fieldType(dart.legacy(core.int))
  }));
  var Color_value = dart.privateName(ui, "Color.value");
  var C14;
  var C15;
  var C16;
  var playedColor$ = dart.privateName(cached_video_player, "VideoProgressColors.playedColor");
  var bufferedColor$ = dart.privateName(cached_video_player, "VideoProgressColors.bufferedColor");
  var backgroundColor$ = dart.privateName(cached_video_player, "VideoProgressColors.backgroundColor");
  cached_video_player.VideoProgressColors = class VideoProgressColors extends core.Object {
    get playedColor() {
      return this[playedColor$];
    }
    set playedColor(value) {
      super.playedColor = value;
    }
    get bufferedColor() {
      return this[bufferedColor$];
    }
    set bufferedColor(value) {
      super.bufferedColor = value;
    }
    get backgroundColor() {
      return this[backgroundColor$];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
  };
  (cached_video_player.VideoProgressColors.new = function(opts) {
    let playedColor = opts && 'playedColor' in opts ? opts.playedColor : C14 || CT.C14;
    let bufferedColor = opts && 'bufferedColor' in opts ? opts.bufferedColor : C15 || CT.C15;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : C16 || CT.C16;
    this[playedColor$] = playedColor;
    this[bufferedColor$] = bufferedColor;
    this[backgroundColor$] = backgroundColor;
    ;
  }).prototype = cached_video_player.VideoProgressColors.prototype;
  dart.addTypeTests(cached_video_player.VideoProgressColors);
  dart.addTypeCaches(cached_video_player.VideoProgressColors);
  dart.setLibraryUri(cached_video_player.VideoProgressColors, L0);
  dart.setFieldSignature(cached_video_player.VideoProgressColors, () => ({
    __proto__: dart.getFields(cached_video_player.VideoProgressColors.__proto__),
    playedColor: dart.finalFieldType(dart.legacy(ui.Color)),
    bufferedColor: dart.finalFieldType(dart.legacy(ui.Color)),
    backgroundColor: dart.finalFieldType(dart.legacy(ui.Color))
  }));
  cached_video_player._VideoScrubber = class _VideoScrubber extends framework.StatefulWidget {
    createState() {
      return new cached_video_player._VideoScrubberState.new();
    }
  };
  (cached_video_player._VideoScrubber.new = function(opts) {
    let child = opts && 'child' in opts ? opts.child : null;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this.child = child;
    this.controller = controller;
    cached_video_player._VideoScrubber.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = cached_video_player._VideoScrubber.prototype;
  dart.addTypeTests(cached_video_player._VideoScrubber);
  dart.addTypeCaches(cached_video_player._VideoScrubber);
  dart.setMethodSignature(cached_video_player._VideoScrubber, () => ({
    __proto__: dart.getMethods(cached_video_player._VideoScrubber.__proto__),
    createState: dart.fnType(dart.legacy(cached_video_player._VideoScrubberState), [])
  }));
  dart.setLibraryUri(cached_video_player._VideoScrubber, L0);
  dart.setFieldSignature(cached_video_player._VideoScrubber, () => ({
    __proto__: dart.getFields(cached_video_player._VideoScrubber.__proto__),
    child: dart.finalFieldType(dart.legacy(framework.Widget)),
    controller: dart.finalFieldType(dart.legacy(cached_video_player.CachedVideoPlayerController))
  }));
  var _controllerWasPlaying = dart.privateName(cached_video_player, "_controllerWasPlaying");
  var C19;
  var C20;
  var C21;
  var C22;
  var C23;
  var C24;
  var C18;
  var C17;
  cached_video_player._VideoScrubberState = class _VideoScrubberState extends framework.State$(dart.legacy(cached_video_player._VideoScrubber)) {
    get controller() {
      return this.widget.controller;
    }
    build(context) {
      const seekToRelativePosition = globalPosition => {
        let box = RenderBoxL().as(context.findRenderObject());
        let tapPos = box.globalToLocal(globalPosition);
        let relative = dart.notNull(tapPos.dx) / dart.notNull(box.size.width);
        let position = this.controller.value.duration['*'](relative);
        this.controller.seekTo(position);
      };
      dart.fn(seekToRelativePosition, OffsetLTovoid());
      return new gesture_detector.GestureDetector.new({behavior: proxy_box.HitTestBehavior.opaque, child: this.widget.child, onHorizontalDragStart: dart.fn(details => {
          if (!dart.test(this.controller.value.initialized)) {
            return;
          }
          this[_controllerWasPlaying] = this.controller.value.isPlaying;
          if (dart.test(this[_controllerWasPlaying])) {
            this.controller.pause();
          }
        }, DragStartDetailsLToNull()), onHorizontalDragUpdate: dart.fn(details => {
          if (!dart.test(this.controller.value.initialized)) {
            return;
          }
          seekToRelativePosition(details.globalPosition);
        }, DragUpdateDetailsLToNull()), onHorizontalDragEnd: dart.fn(details => {
          if (dart.test(this[_controllerWasPlaying])) {
            this.controller.play();
          }
        }, DragEndDetailsLToNull()), onTapDown: dart.fn(details => {
          if (!dart.test(this.controller.value.initialized)) {
            return;
          }
          seekToRelativePosition(details.globalPosition);
        }, TapDownDetailsLToNull()), $creationLocationd_0dea112b090073317d4: C17 || CT.C17});
    }
  };
  (cached_video_player._VideoScrubberState.new = function() {
    this[_controllerWasPlaying] = false;
    cached_video_player._VideoScrubberState.__proto__.new.call(this);
    ;
  }).prototype = cached_video_player._VideoScrubberState.prototype;
  dart.addTypeTests(cached_video_player._VideoScrubberState);
  dart.addTypeCaches(cached_video_player._VideoScrubberState);
  dart.setMethodSignature(cached_video_player._VideoScrubberState, () => ({
    __proto__: dart.getMethods(cached_video_player._VideoScrubberState.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setGetterSignature(cached_video_player._VideoScrubberState, () => ({
    __proto__: dart.getGetters(cached_video_player._VideoScrubberState.__proto__),
    controller: dart.legacy(cached_video_player.CachedVideoPlayerController)
  }));
  dart.setLibraryUri(cached_video_player._VideoScrubberState, L0);
  dart.setFieldSignature(cached_video_player._VideoScrubberState, () => ({
    __proto__: dart.getFields(cached_video_player._VideoScrubberState.__proto__),
    [_controllerWasPlaying]: dart.fieldType(dart.legacy(core.bool))
  }));
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  var C25;
  var controller$0 = dart.privateName(cached_video_player, "VideoProgressIndicator.controller");
  var colors$ = dart.privateName(cached_video_player, "VideoProgressIndicator.colors");
  var allowScrubbing$ = dart.privateName(cached_video_player, "VideoProgressIndicator.allowScrubbing");
  var padding$ = dart.privateName(cached_video_player, "VideoProgressIndicator.padding");
  cached_video_player.VideoProgressIndicator = class VideoProgressIndicator extends framework.StatefulWidget {
    get controller() {
      return this[controller$0];
    }
    set controller(value) {
      super.controller = value;
    }
    get colors() {
      return this[colors$];
    }
    set colors(value) {
      super.colors = value;
    }
    get allowScrubbing() {
      return this[allowScrubbing$];
    }
    set allowScrubbing(value) {
      super.allowScrubbing = value;
    }
    get padding() {
      return this[padding$];
    }
    set padding(value) {
      super.padding = value;
    }
    createState() {
      return new cached_video_player._VideoProgressIndicatorState.new();
    }
  };
  (cached_video_player.VideoProgressIndicator.new = function(controller, opts) {
    let t0;
    let colors = opts && 'colors' in opts ? opts.colors : null;
    let allowScrubbing = opts && 'allowScrubbing' in opts ? opts.allowScrubbing : null;
    let padding = opts && 'padding' in opts ? opts.padding : C25 || CT.C25;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[controller$0] = controller;
    this[allowScrubbing$] = allowScrubbing;
    this[padding$] = padding;
    this[colors$] = (t0 = colors, t0 == null ? new cached_video_player.VideoProgressColors.new() : t0);
    cached_video_player.VideoProgressIndicator.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = cached_video_player.VideoProgressIndicator.prototype;
  dart.addTypeTests(cached_video_player.VideoProgressIndicator);
  dart.addTypeCaches(cached_video_player.VideoProgressIndicator);
  dart.setMethodSignature(cached_video_player.VideoProgressIndicator, () => ({
    __proto__: dart.getMethods(cached_video_player.VideoProgressIndicator.__proto__),
    createState: dart.fnType(dart.legacy(cached_video_player._VideoProgressIndicatorState), [])
  }));
  dart.setLibraryUri(cached_video_player.VideoProgressIndicator, L0);
  dart.setFieldSignature(cached_video_player.VideoProgressIndicator, () => ({
    __proto__: dart.getFields(cached_video_player.VideoProgressIndicator.__proto__),
    controller: dart.finalFieldType(dart.legacy(cached_video_player.CachedVideoPlayerController)),
    colors: dart.finalFieldType(dart.legacy(cached_video_player.VideoProgressColors)),
    allowScrubbing: dart.finalFieldType(dart.legacy(core.bool)),
    padding: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsets))
  }));
  var C28;
  var C29;
  var C30;
  var C27;
  var C26;
  var C33;
  var C34;
  var C35;
  var C32;
  var C31;
  var C38;
  var C39;
  var C37;
  var C36;
  var C42;
  var C43;
  var C44;
  var C41;
  var C40;
  var C47;
  var C48;
  var C46;
  var C45;
  var C51;
  var C52;
  var C50;
  var C49;
  cached_video_player._VideoProgressIndicatorState = class _VideoProgressIndicatorState extends framework.State$(dart.legacy(cached_video_player.VideoProgressIndicator)) {
    get controller() {
      return this.widget.controller;
    }
    get colors() {
      return this.widget.colors;
    }
    initState() {
      super.initState();
      this.controller.addListener(this.listener);
    }
    deactivate() {
      this.controller.removeListener(this.listener);
      super.deactivate();
    }
    build(context) {
      let progressIndicator = null;
      if (dart.test(this.controller.value.initialized)) {
        let duration = this.controller.value.duration.inMilliseconds;
        let position = this.controller.value.position.inMilliseconds;
        let maxBuffering = 0;
        for (let range of this.controller.value.buffered) {
          let end = range.end.inMilliseconds;
          if (dart.notNull(end) > dart.notNull(maxBuffering)) {
            maxBuffering = end;
          }
        }
        progressIndicator = new basic.Stack.new({fit: stack.StackFit.passthrough, children: JSArrayOfWidgetL().of([new progress_indicator.LinearProgressIndicator.new({value: dart.notNull(maxBuffering) / dart.notNull(duration), valueColor: new (AlwaysStoppedAnimationOfColorL()).new(this.colors.bufferedColor), backgroundColor: this.colors.backgroundColor, $creationLocationd_0dea112b090073317d4: C26 || CT.C26}), new progress_indicator.LinearProgressIndicator.new({value: dart.notNull(position) / dart.notNull(duration), valueColor: new (AlwaysStoppedAnimationOfColorL()).new(this.colors.playedColor), backgroundColor: colors.Colors.transparent, $creationLocationd_0dea112b090073317d4: C31 || CT.C31})]), $creationLocationd_0dea112b090073317d4: C36 || CT.C36});
      } else {
        progressIndicator = new progress_indicator.LinearProgressIndicator.new({value: null, valueColor: new (AlwaysStoppedAnimationOfColorL()).new(this.colors.playedColor), backgroundColor: this.colors.backgroundColor, $creationLocationd_0dea112b090073317d4: C40 || CT.C40});
      }
      let paddedProgressIndicator = new basic.Padding.new({padding: this.widget.padding, child: progressIndicator, $creationLocationd_0dea112b090073317d4: C45 || CT.C45});
      if (dart.test(this.widget.allowScrubbing)) {
        return new cached_video_player._VideoScrubber.new({child: paddedProgressIndicator, controller: this.controller, $creationLocationd_0dea112b090073317d4: C49 || CT.C49});
      } else {
        return paddedProgressIndicator;
      }
    }
  };
  (cached_video_player._VideoProgressIndicatorState.new = function() {
    this.listener = null;
    cached_video_player._VideoProgressIndicatorState.__proto__.new.call(this);
    this.listener = dart.fn(() => {
      if (!dart.test(this.mounted)) {
        return;
      }
      this.setState(dart.fn(() => {
      }, VoidToNull()));
    }, VoidToNull());
  }).prototype = cached_video_player._VideoProgressIndicatorState.prototype;
  dart.addTypeTests(cached_video_player._VideoProgressIndicatorState);
  dart.addTypeCaches(cached_video_player._VideoProgressIndicatorState);
  dart.setMethodSignature(cached_video_player._VideoProgressIndicatorState, () => ({
    __proto__: dart.getMethods(cached_video_player._VideoProgressIndicatorState.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setGetterSignature(cached_video_player._VideoProgressIndicatorState, () => ({
    __proto__: dart.getGetters(cached_video_player._VideoProgressIndicatorState.__proto__),
    controller: dart.legacy(cached_video_player.CachedVideoPlayerController),
    colors: dart.legacy(cached_video_player.VideoProgressColors)
  }));
  dart.setLibraryUri(cached_video_player._VideoProgressIndicatorState, L0);
  dart.setFieldSignature(cached_video_player._VideoProgressIndicatorState, () => ({
    __proto__: dart.getFields(cached_video_player._VideoProgressIndicatorState.__proto__),
    listener: dart.fieldType(dart.legacy(dart.fnType(dart.void, [])))
  }));
  var MethodChannel__binaryMessenger = dart.privateName(platform_channel, "MethodChannel._binaryMessenger");
  var C55;
  var StandardMethodCodec_messageCodec = dart.privateName(message_codecs, "StandardMethodCodec.messageCodec");
  var C54;
  var MethodChannel_codec = dart.privateName(platform_channel, "MethodChannel.codec");
  var MethodChannel_name = dart.privateName(platform_channel, "MethodChannel.name");
  var C53;
  dart.defineLazy(cached_video_player, {
    /*cached_video_player._channel*/get _channel() {
      let t0;
      return t0 = C53 || CT.C53, (() => {
        t0.invokeMethod(dart.void, "init");
        return t0;
      })();
    }
  }, true);
  dart.trackLibraries("packages/cached_video_player/cached_video_player.dart", {
    "package:cached_video_player/cached_video_player.dart": cached_video_player
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["cached_video_player.dart"],"names":[],"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","file":"../../../../../../../packages/cached_video_player/cached_video_player.dart.lib.js"}');
  // Exports:
  return {
    cached_video_player: cached_video_player
  };
}));

//# sourceMappingURL=cached_video_player.dart.lib.js.map
